//
// Generated by Bluespec Compiler, version 2019.05.beta2 (build a88bf40, 2019-05-24)
//
// On Wed Jan 29 11:07:24 CET 2020
//
//
// Ports:
// Name                         I/O  size props
// S_AXI_arready                  O     1
// S_AXI_rvalid                   O     1
// S_AXI_rdata                    O    64
// S_AXI_rresp                    O     2
// S_AXI_awready                  O     1
// S_AXI_wready                   O     1
// S_AXI_bvalid                   O     1
// S_AXI_bresp                    O     2
// M_AXI_HBM_0_arvalid            O     1 reg
// M_AXI_HBM_0_arid               O     1
// M_AXI_HBM_0_araddr             O    64
// M_AXI_HBM_0_arlen              O     8
// M_AXI_HBM_0_arsize             O     3
// M_AXI_HBM_0_arburst            O     2
// M_AXI_HBM_0_arlock             O     1
// M_AXI_HBM_0_arcache            O     4
// M_AXI_HBM_0_arprot             O     3
// M_AXI_HBM_0_arqos              O     4
// M_AXI_HBM_0_arregion           O     4
// M_AXI_HBM_0_rready             O     1 reg
// M_AXI_HBM_0_awvalid            O     1 reg
// M_AXI_HBM_0_awid               O     1
// M_AXI_HBM_0_awaddr             O    64
// M_AXI_HBM_0_awlen              O     8
// M_AXI_HBM_0_awsize             O     3
// M_AXI_HBM_0_awburst            O     2
// M_AXI_HBM_0_awlock             O     1
// M_AXI_HBM_0_awcache            O     4
// M_AXI_HBM_0_awprot             O     3
// M_AXI_HBM_0_awqos              O     4
// M_AXI_HBM_0_awregion           O     4
// M_AXI_HBM_0_wvalid             O     1 reg
// M_AXI_HBM_0_wdata              O   512
// M_AXI_HBM_0_wstrb              O    64
// M_AXI_HBM_0_wlast              O     1
// M_AXI_HBM_0_bready             O     1 reg
// interrupt                      O     1 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// S_AXI_arvalid                  I     1
// S_AXI_araddr                   I    12
// S_AXI_arprot                   I     3
// S_AXI_rready                   I     1
// S_AXI_awvalid                  I     1
// S_AXI_awaddr                   I    12
// S_AXI_awprot                   I     3
// S_AXI_wvalid                   I     1
// S_AXI_wdata                    I    64
// S_AXI_wstrb                    I     8
// S_AXI_bready                   I     1
// M_AXI_HBM_0_arready            I     1
// M_AXI_HBM_0_rvalid             I     1
// M_AXI_HBM_0_rid                I     1 reg
// M_AXI_HBM_0_rdata              I   512 reg
// M_AXI_HBM_0_rresp              I     2 reg
// M_AXI_HBM_0_rlast              I     1 reg
// M_AXI_HBM_0_awready            I     1
// M_AXI_HBM_0_wready             I     1
// M_AXI_HBM_0_bvalid             I     1
// M_AXI_HBM_0_bresp              I     2 reg
// M_AXI_HBM_0_bid                I     1 reg
//
// Combinational paths from inputs to outputs:
//   S_AXI_rready -> S_AXI_arready
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkMemoryBenchSeq(CLK,
			RST_N,

			S_AXI_arready,

			S_AXI_arvalid,

			S_AXI_araddr,

			S_AXI_arprot,

			S_AXI_rvalid,

			S_AXI_rready,

			S_AXI_rdata,

			S_AXI_rresp,

			S_AXI_awready,

			S_AXI_awvalid,

			S_AXI_awaddr,

			S_AXI_awprot,

			S_AXI_wready,

			S_AXI_wvalid,

			S_AXI_wdata,

			S_AXI_wstrb,

			S_AXI_bvalid,

			S_AXI_bready,

			S_AXI_bresp,

			M_AXI_HBM_0_arvalid,

			M_AXI_HBM_0_arready,

			M_AXI_HBM_0_arid,

			M_AXI_HBM_0_araddr,

			M_AXI_HBM_0_arlen,

			M_AXI_HBM_0_arsize,

			M_AXI_HBM_0_arburst,

			M_AXI_HBM_0_arlock,

			M_AXI_HBM_0_arcache,

			M_AXI_HBM_0_arprot,

			M_AXI_HBM_0_arqos,

			M_AXI_HBM_0_arregion,

			M_AXI_HBM_0_rready,

			M_AXI_HBM_0_rvalid,

			M_AXI_HBM_0_rid,
			M_AXI_HBM_0_rdata,
			M_AXI_HBM_0_rresp,
			M_AXI_HBM_0_rlast,

			M_AXI_HBM_0_awready,

			M_AXI_HBM_0_awvalid,

			M_AXI_HBM_0_awid,

			M_AXI_HBM_0_awaddr,

			M_AXI_HBM_0_awlen,

			M_AXI_HBM_0_awsize,

			M_AXI_HBM_0_awburst,

			M_AXI_HBM_0_awlock,

			M_AXI_HBM_0_awcache,

			M_AXI_HBM_0_awprot,

			M_AXI_HBM_0_awqos,

			M_AXI_HBM_0_awregion,

			M_AXI_HBM_0_wready,

			M_AXI_HBM_0_wvalid,

			M_AXI_HBM_0_wdata,

			M_AXI_HBM_0_wstrb,

			M_AXI_HBM_0_wlast,

			M_AXI_HBM_0_bvalid,

			M_AXI_HBM_0_bready,

			M_AXI_HBM_0_bresp,
			M_AXI_HBM_0_bid,

			interrupt);
  input  CLK;
  input  RST_N;

  // value method s_rd_arready
  output S_AXI_arready;

  // action method s_rd_parvalid
  input  S_AXI_arvalid;

  // action method s_rd_paraddr
  input  [11 : 0] S_AXI_araddr;

  // action method s_rd_parprot
  input  [2 : 0] S_AXI_arprot;

  // value method s_rd_rvalid
  output S_AXI_rvalid;

  // action method s_rd_prready
  input  S_AXI_rready;

  // value method s_rd_rdata
  output [63 : 0] S_AXI_rdata;

  // value method s_rd_rresp
  output [1 : 0] S_AXI_rresp;

  // value method s_wr_awready
  output S_AXI_awready;

  // action method s_wr_pawvalid
  input  S_AXI_awvalid;

  // action method s_wr_pawaddr
  input  [11 : 0] S_AXI_awaddr;

  // action method s_wr_pawprot
  input  [2 : 0] S_AXI_awprot;

  // value method s_wr_wready
  output S_AXI_wready;

  // action method s_wr_pwvalid
  input  S_AXI_wvalid;

  // action method s_wr_pwdata
  input  [63 : 0] S_AXI_wdata;

  // action method s_wr_pwstrb
  input  [7 : 0] S_AXI_wstrb;

  // value method s_wr_bvalid
  output S_AXI_bvalid;

  // action method s_wr_pbready
  input  S_AXI_bready;

  // value method s_wr_bresp
  output [1 : 0] S_AXI_bresp;

  // value method rds_0_arvalid
  output M_AXI_HBM_0_arvalid;

  // action method rds_0_parready
  input  M_AXI_HBM_0_arready;

  // value method rds_0_arid
  output M_AXI_HBM_0_arid;

  // value method rds_0_araddr
  output [63 : 0] M_AXI_HBM_0_araddr;

  // value method rds_0_arlen
  output [7 : 0] M_AXI_HBM_0_arlen;

  // value method rds_0_arsize
  output [2 : 0] M_AXI_HBM_0_arsize;

  // value method rds_0_arburst
  output [1 : 0] M_AXI_HBM_0_arburst;

  // value method rds_0_arlock
  output M_AXI_HBM_0_arlock;

  // value method rds_0_arcache
  output [3 : 0] M_AXI_HBM_0_arcache;

  // value method rds_0_arprot
  output [2 : 0] M_AXI_HBM_0_arprot;

  // value method rds_0_arqos
  output [3 : 0] M_AXI_HBM_0_arqos;

  // value method rds_0_arregion
  output [3 : 0] M_AXI_HBM_0_arregion;

  // value method rds_0_aruser

  // value method rds_0_rready
  output M_AXI_HBM_0_rready;

  // action method rds_0_prvalid
  input  M_AXI_HBM_0_rvalid;

  // action method rds_0_prchannel
  input  M_AXI_HBM_0_rid;
  input  [511 : 0] M_AXI_HBM_0_rdata;
  input  [1 : 0] M_AXI_HBM_0_rresp;
  input  M_AXI_HBM_0_rlast;

  // action method wrs_0_pawready
  input  M_AXI_HBM_0_awready;

  // value method wrs_0_awvalid
  output M_AXI_HBM_0_awvalid;

  // value method wrs_0_awid
  output M_AXI_HBM_0_awid;

  // value method wrs_0_awaddr
  output [63 : 0] M_AXI_HBM_0_awaddr;

  // value method wrs_0_awlen
  output [7 : 0] M_AXI_HBM_0_awlen;

  // value method wrs_0_awsize
  output [2 : 0] M_AXI_HBM_0_awsize;

  // value method wrs_0_awburst
  output [1 : 0] M_AXI_HBM_0_awburst;

  // value method wrs_0_awlock
  output M_AXI_HBM_0_awlock;

  // value method wrs_0_awcache
  output [3 : 0] M_AXI_HBM_0_awcache;

  // value method wrs_0_awprot
  output [2 : 0] M_AXI_HBM_0_awprot;

  // value method wrs_0_awqos
  output [3 : 0] M_AXI_HBM_0_awqos;

  // value method wrs_0_awregion
  output [3 : 0] M_AXI_HBM_0_awregion;

  // value method wrs_0_awuser

  // action method wrs_0_pwready
  input  M_AXI_HBM_0_wready;

  // value method wrs_0_wvalid
  output M_AXI_HBM_0_wvalid;

  // value method wrs_0_wdata
  output [511 : 0] M_AXI_HBM_0_wdata;

  // value method wrs_0_wstrb
  output [63 : 0] M_AXI_HBM_0_wstrb;

  // value method wrs_0_wlast
  output M_AXI_HBM_0_wlast;

  // value method wrs_0_wuser

  // action method wrs_0_pbvalid
  input  M_AXI_HBM_0_bvalid;

  // value method wrs_0_bready
  output M_AXI_HBM_0_bready;

  // action method wrs_0_bin
  input  [1 : 0] M_AXI_HBM_0_bresp;
  input  M_AXI_HBM_0_bid;

  // value method interrupt
  output interrupt;

  // signals for module outputs
  wire [511 : 0] M_AXI_HBM_0_wdata;
  wire [63 : 0] M_AXI_HBM_0_araddr,
		M_AXI_HBM_0_awaddr,
		M_AXI_HBM_0_wstrb,
		S_AXI_rdata;
  wire [7 : 0] M_AXI_HBM_0_arlen, M_AXI_HBM_0_awlen;
  wire [3 : 0] M_AXI_HBM_0_arcache,
	       M_AXI_HBM_0_arqos,
	       M_AXI_HBM_0_arregion,
	       M_AXI_HBM_0_awcache,
	       M_AXI_HBM_0_awqos,
	       M_AXI_HBM_0_awregion;
  wire [2 : 0] M_AXI_HBM_0_arprot,
	       M_AXI_HBM_0_arsize,
	       M_AXI_HBM_0_awprot,
	       M_AXI_HBM_0_awsize;
  wire [1 : 0] M_AXI_HBM_0_arburst,
	       M_AXI_HBM_0_awburst,
	       S_AXI_bresp,
	       S_AXI_rresp;
  wire M_AXI_HBM_0_arid,
       M_AXI_HBM_0_arlock,
       M_AXI_HBM_0_arvalid,
       M_AXI_HBM_0_awid,
       M_AXI_HBM_0_awlock,
       M_AXI_HBM_0_awvalid,
       M_AXI_HBM_0_bready,
       M_AXI_HBM_0_rready,
       M_AXI_HBM_0_wlast,
       M_AXI_HBM_0_wvalid,
       S_AXI_arready,
       S_AXI_awready,
       S_AXI_bvalid,
       S_AXI_rvalid,
       S_AXI_wready,
       interrupt;

  // inlined wires
  reg [66 : 0] s_config_readSlave_out_rv$port1__write_1;
  reg [3 : 0] rdMasters_0_master_rd_warcache$wget,
	      wrMasters_0_master_wr_wawcache$wget;
  wire [515 : 0] rdMasters_0_master_rd_rinpkg$wget;
  wire [511 : 0] rdMasters_0_outgoingBuffer_wDataOut$wget;
  wire [87 : 0] s_config_writeSlave_in_rv$port1__read,
		s_config_writeSlave_in_rv$port1__write_1,
		s_config_writeSlave_in_rv$port2__read;
  wire [72 : 0] s_config_writeSlave_dataIn_rv$port0__write_1,
		s_config_writeSlave_dataIn_rv$port1__read,
		s_config_writeSlave_dataIn_rv$port2__read;
  wire [66 : 0] s_config_readSlave_out_rv$port1__read,
		s_config_readSlave_out_rv$port2__read;
  wire [15 : 0] s_config_readSlave_in_rv$port1__read,
		s_config_readSlave_in_rv$port1__write_1,
		s_config_readSlave_in_rv$port2__read,
		s_config_writeSlave_addrIn_rv$port0__write_1,
		s_config_writeSlave_addrIn_rv$port1__read,
		s_config_writeSlave_addrIn_rv$port2__read;
  wire [11 : 0] rdMasters_0_outstanding_beats$port0__write_1,
		rdMasters_0_outstanding_beats$port1__write_1,
		rdMasters_0_outstanding_beats$port2__read,
		wrMasters_0_outstanding_beats$port0__write_1,
		wrMasters_0_outstanding_beats$port1__write_1,
		wrMasters_0_outstanding_beats$port2__read;
  wire [5 : 0] wrMasters_0_outstanding_writes$port0__write_1,
	       wrMasters_0_outstanding_writes$port1__write_1,
	       wrMasters_0_outstanding_writes$port2__read,
	       wrMasters_0_outstanding_writes_out$port0__write_1,
	       wrMasters_0_outstanding_writes_out$port1__write_1,
	       wrMasters_0_outstanding_writes_out$port2__read;
  wire [2 : 0] s_config_writeSlave_out_rv$port1__read,
	       s_config_writeSlave_out_rv$port2__read,
	       wrMasters_0_master_wr_rinpkg$wget;
  wire rdMasters_0_outgoingBuffer_pwDequeue$whas,
       rdMasters_0_outstanding_beats$EN_port0__write,
       rdMasters_0_outstanding_beats$EN_port1__write,
       s_config_readIsHandled$whas,
       s_config_readSlave_in_rv$EN_port0__write,
       s_config_readSlave_in_rv$EN_port1__write,
       s_config_readSlave_out_rv$EN_port0__write,
       s_config_readSlave_out_rv$EN_port1__write,
       s_config_writeIsHandled$whas,
       s_config_writeSlave_addrIn_rv$EN_port0__write,
       s_config_writeSlave_addrIn_rv$EN_port1__write,
       s_config_writeSlave_dataIn_rv$EN_port0__write,
       s_config_writeSlave_dataIn_rv$EN_port1__write,
       s_config_writeSlave_in_rv$EN_port0__write,
       s_config_writeSlave_in_rv$EN_port1__write,
       s_config_writeSlave_out_rv$EN_port0__write,
       s_config_writeSlave_out_rv$EN_port1__write,
       wrMasters_0_incomingBuffer_pwEnqueue$whas,
       wrMasters_0_outstanding_beats$EN_port0__write,
       wrMasters_0_outstanding_beats$EN_port1__write,
       wrMasters_0_outstanding_writes$EN_port1__write,
       wrMasters_0_outstanding_writes_out$EN_port0__write,
       wrMasters_0_outstanding_writes_out$EN_port1__write;

  // register cycleCount
  reg [63 : 0] cycleCount;
  wire [63 : 0] cycleCount$D_IN;
  wire cycleCount$EN;

  // register idle
  reg idle;
  wire idle$D_IN, idle$EN;

  // register interruptR
  reg interruptR;
  wire interruptR$D_IN, interruptR$EN;

  // register intf_count
  reg [5 : 0] intf_count;
  wire [5 : 0] intf_count$D_IN;
  wire intf_count$EN;

  // register lastCycle
  reg lastCycle;
  wire lastCycle$D_IN, lastCycle$EN;

  // register length
  reg [63 : 0] length;
  wire [63 : 0] length$D_IN;
  wire length$EN;

  // register operation
  reg [5 : 0] operation;
  wire [5 : 0] operation$D_IN;
  wire operation$EN;

  // register rdMasters_0_outgoingBuffer_rCache
  reg [525 : 0] rdMasters_0_outgoingBuffer_rCache;
  wire [525 : 0] rdMasters_0_outgoingBuffer_rCache$D_IN;
  wire rdMasters_0_outgoingBuffer_rCache$EN;

  // register rdMasters_0_outgoingBuffer_rRdPtr
  reg [12 : 0] rdMasters_0_outgoingBuffer_rRdPtr;
  wire [12 : 0] rdMasters_0_outgoingBuffer_rRdPtr$D_IN;
  wire rdMasters_0_outgoingBuffer_rRdPtr$EN;

  // register rdMasters_0_outgoingBuffer_rWrPtr
  reg [12 : 0] rdMasters_0_outgoingBuffer_rWrPtr;
  wire [12 : 0] rdMasters_0_outgoingBuffer_rWrPtr$D_IN;
  wire rdMasters_0_outgoingBuffer_rWrPtr$EN;

  // register rdMasters_0_outstanding_beats
  reg [11 : 0] rdMasters_0_outstanding_beats;
  wire [11 : 0] rdMasters_0_outstanding_beats$D_IN;
  wire rdMasters_0_outstanding_beats$EN;

  // register rdMasters_0_task_data_output_reg
  reg [44 : 0] rdMasters_0_task_data_output_reg;
  wire [44 : 0] rdMasters_0_task_data_output_reg$D_IN;
  wire rdMasters_0_task_data_output_reg$EN;

  // register rdMasters_0_task_data_requests_reg
  reg [112 : 0] rdMasters_0_task_data_requests_reg;
  wire [112 : 0] rdMasters_0_task_data_requests_reg$D_IN;
  wire rdMasters_0_task_data_requests_reg$EN;

  // register s_config_readBusy
  reg s_config_readBusy;
  wire s_config_readBusy$D_IN, s_config_readBusy$EN;

  // register s_config_readSlave_in_rv
  reg [15 : 0] s_config_readSlave_in_rv;
  wire [15 : 0] s_config_readSlave_in_rv$D_IN;
  wire s_config_readSlave_in_rv$EN;

  // register s_config_readSlave_out_rv
  reg [66 : 0] s_config_readSlave_out_rv;
  wire [66 : 0] s_config_readSlave_out_rv$D_IN;
  wire s_config_readSlave_out_rv$EN;

  // register s_config_writeBusy
  reg s_config_writeBusy;
  wire s_config_writeBusy$D_IN, s_config_writeBusy$EN;

  // register s_config_writeSlave_addrIn_rv
  reg [15 : 0] s_config_writeSlave_addrIn_rv;
  wire [15 : 0] s_config_writeSlave_addrIn_rv$D_IN;
  wire s_config_writeSlave_addrIn_rv$EN;

  // register s_config_writeSlave_dataIn_rv
  reg [72 : 0] s_config_writeSlave_dataIn_rv;
  wire [72 : 0] s_config_writeSlave_dataIn_rv$D_IN;
  wire s_config_writeSlave_dataIn_rv$EN;

  // register s_config_writeSlave_in_rv
  reg [87 : 0] s_config_writeSlave_in_rv;
  wire [87 : 0] s_config_writeSlave_in_rv$D_IN;
  wire s_config_writeSlave_in_rv$EN;

  // register s_config_writeSlave_out_rv
  reg [2 : 0] s_config_writeSlave_out_rv;
  wire [2 : 0] s_config_writeSlave_out_rv$D_IN;
  wire s_config_writeSlave_out_rv$EN;

  // register start
  reg start;
  wire start$D_IN, start$EN;

  // register status
  reg [63 : 0] status;
  wire [63 : 0] status$D_IN;
  wire status$EN;

  // register wrMasters_0_beatsThisRequestCntr
  reg [7 : 0] wrMasters_0_beatsThisRequestCntr;
  wire [7 : 0] wrMasters_0_beatsThisRequestCntr$D_IN;
  wire wrMasters_0_beatsThisRequestCntr$EN;

  // register wrMasters_0_incomingBuffer_rCache
  reg [525 : 0] wrMasters_0_incomingBuffer_rCache;
  wire [525 : 0] wrMasters_0_incomingBuffer_rCache$D_IN;
  wire wrMasters_0_incomingBuffer_rCache$EN;

  // register wrMasters_0_incomingBuffer_rRdPtr
  reg [12 : 0] wrMasters_0_incomingBuffer_rRdPtr;
  wire [12 : 0] wrMasters_0_incomingBuffer_rRdPtr$D_IN;
  wire wrMasters_0_incomingBuffer_rRdPtr$EN;

  // register wrMasters_0_incomingBuffer_rWrPtr
  reg [12 : 0] wrMasters_0_incomingBuffer_rWrPtr;
  wire [12 : 0] wrMasters_0_incomingBuffer_rWrPtr$D_IN;
  wire wrMasters_0_incomingBuffer_rWrPtr$EN;

  // register wrMasters_0_outstanding_beats
  reg [11 : 0] wrMasters_0_outstanding_beats;
  wire [11 : 0] wrMasters_0_outstanding_beats$D_IN;
  wire wrMasters_0_outstanding_beats$EN;

  // register wrMasters_0_outstanding_writes
  reg [5 : 0] wrMasters_0_outstanding_writes;
  wire [5 : 0] wrMasters_0_outstanding_writes$D_IN;
  wire wrMasters_0_outstanding_writes$EN;

  // register wrMasters_0_outstanding_writes_out
  reg [5 : 0] wrMasters_0_outstanding_writes_out;
  wire [5 : 0] wrMasters_0_outstanding_writes_out$D_IN;
  wire wrMasters_0_outstanding_writes_out$EN;

  // register wrMasters_0_task_data_output_reg
  reg [44 : 0] wrMasters_0_task_data_output_reg;
  wire [44 : 0] wrMasters_0_task_data_output_reg$D_IN;
  wire wrMasters_0_task_data_output_reg$EN;

  // register wrMasters_0_task_data_requests_reg
  reg [112 : 0] wrMasters_0_task_data_requests_reg;
  wire [112 : 0] wrMasters_0_task_data_requests_reg$D_IN;
  wire wrMasters_0_task_data_requests_reg$EN;

  // ports of submodule rdMasters_0_master_rd_in
  wire [93 : 0] rdMasters_0_master_rd_in$D_IN, rdMasters_0_master_rd_in$D_OUT;
  wire rdMasters_0_master_rd_in$CLR,
       rdMasters_0_master_rd_in$DEQ,
       rdMasters_0_master_rd_in$EMPTY_N,
       rdMasters_0_master_rd_in$ENQ,
       rdMasters_0_master_rd_in$FULL_N;

  // ports of submodule rdMasters_0_master_rd_out
  wire [515 : 0] rdMasters_0_master_rd_out$D_IN,
		 rdMasters_0_master_rd_out$D_OUT;
  wire rdMasters_0_master_rd_out$CLR,
       rdMasters_0_master_rd_out$DEQ,
       rdMasters_0_master_rd_out$EMPTY_N,
       rdMasters_0_master_rd_out$ENQ,
       rdMasters_0_master_rd_out$FULL_N;

  // ports of submodule rdMasters_0_maxOutstandingFIFO
  wire rdMasters_0_maxOutstandingFIFO$CLR,
       rdMasters_0_maxOutstandingFIFO$DEQ,
       rdMasters_0_maxOutstandingFIFO$D_IN,
       rdMasters_0_maxOutstandingFIFO$EMPTY_N,
       rdMasters_0_maxOutstandingFIFO$ENQ,
       rdMasters_0_maxOutstandingFIFO$FULL_N;

  // ports of submodule rdMasters_0_outgoingBuffer_memory
  wire [511 : 0] rdMasters_0_outgoingBuffer_memory$DIA,
		 rdMasters_0_outgoingBuffer_memory$DIB,
		 rdMasters_0_outgoingBuffer_memory$DOB;
  wire [11 : 0] rdMasters_0_outgoingBuffer_memory$ADDRA,
		rdMasters_0_outgoingBuffer_memory$ADDRB;
  wire rdMasters_0_outgoingBuffer_memory$ENA,
       rdMasters_0_outgoingBuffer_memory$ENB,
       rdMasters_0_outgoingBuffer_memory$WEA,
       rdMasters_0_outgoingBuffer_memory$WEB;

  // ports of submodule rdMasters_0_read_rq_out
  wire [93 : 0] rdMasters_0_read_rq_out$D_IN, rdMasters_0_read_rq_out$D_OUT;
  wire rdMasters_0_read_rq_out$CLR,
       rdMasters_0_read_rq_out$DEQ,
       rdMasters_0_read_rq_out$EMPTY_N,
       rdMasters_0_read_rq_out$ENQ,
       rdMasters_0_read_rq_out$FULL_N;

  // ports of submodule rdMasters_0_relaxationBuffer
  wire [511 : 0] rdMasters_0_relaxationBuffer$D_IN;
  wire rdMasters_0_relaxationBuffer$CLR,
       rdMasters_0_relaxationBuffer$DEQ,
       rdMasters_0_relaxationBuffer$EMPTY_N,
       rdMasters_0_relaxationBuffer$ENQ,
       rdMasters_0_relaxationBuffer$FULL_N;

  // ports of submodule rdMasters_0_reqGen_incomingBuffer
  wire [99 : 0] rdMasters_0_reqGen_incomingBuffer$D_IN,
		rdMasters_0_reqGen_incomingBuffer$D_OUT;
  wire rdMasters_0_reqGen_incomingBuffer$CLR,
       rdMasters_0_reqGen_incomingBuffer$DEQ,
       rdMasters_0_reqGen_incomingBuffer$EMPTY_N,
       rdMasters_0_reqGen_incomingBuffer$ENQ,
       rdMasters_0_reqGen_incomingBuffer$FULL_N;

  // ports of submodule rdMasters_0_reqGen_intermediateBuffer
  wire [111 : 0] rdMasters_0_reqGen_intermediateBuffer$D_IN,
		 rdMasters_0_reqGen_intermediateBuffer$D_OUT;
  wire rdMasters_0_reqGen_intermediateBuffer$CLR,
       rdMasters_0_reqGen_intermediateBuffer$DEQ,
       rdMasters_0_reqGen_intermediateBuffer$EMPTY_N,
       rdMasters_0_reqGen_intermediateBuffer$ENQ,
       rdMasters_0_reqGen_intermediateBuffer$FULL_N;

  // ports of submodule rdMasters_0_reqGen_intermediateBuffer2
  wire [137 : 0] rdMasters_0_reqGen_intermediateBuffer2$D_IN,
		 rdMasters_0_reqGen_intermediateBuffer2$D_OUT;
  wire rdMasters_0_reqGen_intermediateBuffer2$CLR,
       rdMasters_0_reqGen_intermediateBuffer2$DEQ,
       rdMasters_0_reqGen_intermediateBuffer2$EMPTY_N,
       rdMasters_0_reqGen_intermediateBuffer2$ENQ,
       rdMasters_0_reqGen_intermediateBuffer2$FULL_N;

  // ports of submodule rdMasters_0_reqGen_intermediateBuffer3
  wire [146 : 0] rdMasters_0_reqGen_intermediateBuffer3$D_IN,
		 rdMasters_0_reqGen_intermediateBuffer3$D_OUT;
  wire rdMasters_0_reqGen_intermediateBuffer3$CLR,
       rdMasters_0_reqGen_intermediateBuffer3$DEQ,
       rdMasters_0_reqGen_intermediateBuffer3$EMPTY_N,
       rdMasters_0_reqGen_intermediateBuffer3$ENQ,
       rdMasters_0_reqGen_intermediateBuffer3$FULL_N;

  // ports of submodule rdMasters_0_reqGen_outgoingBuffer
  wire [157 : 0] rdMasters_0_reqGen_outgoingBuffer$D_IN,
		 rdMasters_0_reqGen_outgoingBuffer$D_OUT;
  wire rdMasters_0_reqGen_outgoingBuffer$CLR,
       rdMasters_0_reqGen_outgoingBuffer$DEQ,
       rdMasters_0_reqGen_outgoingBuffer$EMPTY_N,
       rdMasters_0_reqGen_outgoingBuffer$ENQ,
       rdMasters_0_reqGen_outgoingBuffer$FULL_N;

  // ports of submodule wrMasters_0_beatsPerRequestFIFO
  wire [7 : 0] wrMasters_0_beatsPerRequestFIFO$D_IN,
	       wrMasters_0_beatsPerRequestFIFO$D_OUT;
  wire wrMasters_0_beatsPerRequestFIFO$CLR,
       wrMasters_0_beatsPerRequestFIFO$DEQ,
       wrMasters_0_beatsPerRequestFIFO$EMPTY_N,
       wrMasters_0_beatsPerRequestFIFO$ENQ,
       wrMasters_0_beatsPerRequestFIFO$FULL_N;

  // ports of submodule wrMasters_0_incomingBuffer_memory
  wire [511 : 0] wrMasters_0_incomingBuffer_memory$DIA,
		 wrMasters_0_incomingBuffer_memory$DIB,
		 wrMasters_0_incomingBuffer_memory$DOB;
  wire [11 : 0] wrMasters_0_incomingBuffer_memory$ADDRA,
		wrMasters_0_incomingBuffer_memory$ADDRB;
  wire wrMasters_0_incomingBuffer_memory$ENA,
       wrMasters_0_incomingBuffer_memory$ENB,
       wrMasters_0_incomingBuffer_memory$WEA,
       wrMasters_0_incomingBuffer_memory$WEB;

  // ports of submodule wrMasters_0_master_wr_in_addr
  wire [93 : 0] wrMasters_0_master_wr_in_addr$D_IN,
		wrMasters_0_master_wr_in_addr$D_OUT;
  wire wrMasters_0_master_wr_in_addr$CLR,
       wrMasters_0_master_wr_in_addr$DEQ,
       wrMasters_0_master_wr_in_addr$EMPTY_N,
       wrMasters_0_master_wr_in_addr$ENQ,
       wrMasters_0_master_wr_in_addr$FULL_N;

  // ports of submodule wrMasters_0_master_wr_in_data
  wire [576 : 0] wrMasters_0_master_wr_in_data$D_IN,
		 wrMasters_0_master_wr_in_data$D_OUT;
  wire wrMasters_0_master_wr_in_data$CLR,
       wrMasters_0_master_wr_in_data$DEQ,
       wrMasters_0_master_wr_in_data$EMPTY_N,
       wrMasters_0_master_wr_in_data$ENQ,
       wrMasters_0_master_wr_in_data$FULL_N;

  // ports of submodule wrMasters_0_master_wr_out
  wire [2 : 0] wrMasters_0_master_wr_out$D_IN;
  wire wrMasters_0_master_wr_out$CLR,
       wrMasters_0_master_wr_out$DEQ,
       wrMasters_0_master_wr_out$EMPTY_N,
       wrMasters_0_master_wr_out$ENQ,
       wrMasters_0_master_wr_out$FULL_N;

  // ports of submodule wrMasters_0_relaxationBuffer
  wire [511 : 0] wrMasters_0_relaxationBuffer$D_IN,
		 wrMasters_0_relaxationBuffer$D_OUT;
  wire wrMasters_0_relaxationBuffer$CLR,
       wrMasters_0_relaxationBuffer$DEQ,
       wrMasters_0_relaxationBuffer$EMPTY_N,
       wrMasters_0_relaxationBuffer$ENQ,
       wrMasters_0_relaxationBuffer$FULL_N;

  // ports of submodule wrMasters_0_reqGen_incomingBuffer
  wire [99 : 0] wrMasters_0_reqGen_incomingBuffer$D_IN,
		wrMasters_0_reqGen_incomingBuffer$D_OUT;
  wire wrMasters_0_reqGen_incomingBuffer$CLR,
       wrMasters_0_reqGen_incomingBuffer$DEQ,
       wrMasters_0_reqGen_incomingBuffer$EMPTY_N,
       wrMasters_0_reqGen_incomingBuffer$ENQ,
       wrMasters_0_reqGen_incomingBuffer$FULL_N;

  // ports of submodule wrMasters_0_reqGen_intermediateBuffer
  wire [111 : 0] wrMasters_0_reqGen_intermediateBuffer$D_IN,
		 wrMasters_0_reqGen_intermediateBuffer$D_OUT;
  wire wrMasters_0_reqGen_intermediateBuffer$CLR,
       wrMasters_0_reqGen_intermediateBuffer$DEQ,
       wrMasters_0_reqGen_intermediateBuffer$EMPTY_N,
       wrMasters_0_reqGen_intermediateBuffer$ENQ,
       wrMasters_0_reqGen_intermediateBuffer$FULL_N;

  // ports of submodule wrMasters_0_reqGen_intermediateBuffer2
  wire [137 : 0] wrMasters_0_reqGen_intermediateBuffer2$D_IN,
		 wrMasters_0_reqGen_intermediateBuffer2$D_OUT;
  wire wrMasters_0_reqGen_intermediateBuffer2$CLR,
       wrMasters_0_reqGen_intermediateBuffer2$DEQ,
       wrMasters_0_reqGen_intermediateBuffer2$EMPTY_N,
       wrMasters_0_reqGen_intermediateBuffer2$ENQ,
       wrMasters_0_reqGen_intermediateBuffer2$FULL_N;

  // ports of submodule wrMasters_0_reqGen_intermediateBuffer3
  wire [146 : 0] wrMasters_0_reqGen_intermediateBuffer3$D_IN,
		 wrMasters_0_reqGen_intermediateBuffer3$D_OUT;
  wire wrMasters_0_reqGen_intermediateBuffer3$CLR,
       wrMasters_0_reqGen_intermediateBuffer3$DEQ,
       wrMasters_0_reqGen_intermediateBuffer3$EMPTY_N,
       wrMasters_0_reqGen_intermediateBuffer3$ENQ,
       wrMasters_0_reqGen_intermediateBuffer3$FULL_N;

  // ports of submodule wrMasters_0_reqGen_outgoingBuffer
  wire [157 : 0] wrMasters_0_reqGen_outgoingBuffer$D_IN,
		 wrMasters_0_reqGen_outgoingBuffer$D_OUT;
  wire wrMasters_0_reqGen_outgoingBuffer$CLR,
       wrMasters_0_reqGen_outgoingBuffer$DEQ,
       wrMasters_0_reqGen_outgoingBuffer$EMPTY_N,
       wrMasters_0_reqGen_outgoingBuffer$ENQ,
       wrMasters_0_reqGen_outgoingBuffer$FULL_N;

  // ports of submodule wrMasters_0_write_rq_out
  wire [93 : 0] wrMasters_0_write_rq_out$D_IN, wrMasters_0_write_rq_out$D_OUT;
  wire wrMasters_0_write_rq_out$CLR,
       wrMasters_0_write_rq_out$DEQ,
       wrMasters_0_write_rq_out$EMPTY_N,
       wrMasters_0_write_rq_out$ENQ,
       wrMasters_0_write_rq_out$FULL_N;

  // rule scheduling signals
  wire WILL_FIRE_RL_rdMasters_0_fillBuffer,
       WILL_FIRE_RL_rdMasters_0_forwardData,
       WILL_FIRE_RL_rdMasters_0_placeAXI,
       WILL_FIRE_RL_rdMasters_0_placeRequest,
       WILL_FIRE_RL_s_config_1_axiWriteFallback,
       WILL_FIRE_RL_s_config_1_axiWriteSpecial,
       WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled,
       WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_1,
       WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_2,
       WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_3,
       WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_4,
       WILL_FIRE_RL_s_config_1_axiWriteSpecial_1,
       WILL_FIRE_RL_s_config_1_axiWriteSpecial_2,
       WILL_FIRE_RL_s_config_1_axiWriteSpecial_3,
       WILL_FIRE_RL_s_config_1_axiWriteSpecial_4,
       WILL_FIRE_RL_s_config_axiReadFallback,
       WILL_FIRE_RL_s_config_axiReadSpecial,
       WILL_FIRE_RL_s_config_axiReadSpecialIsHandled,
       WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_1,
       WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_2,
       WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_3,
       WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_4,
       WILL_FIRE_RL_s_config_axiReadSpecial_1,
       WILL_FIRE_RL_s_config_axiReadSpecial_2,
       WILL_FIRE_RL_s_config_axiReadSpecial_3,
       WILL_FIRE_RL_s_config_axiReadSpecial_4,
       WILL_FIRE_RL_startRead,
       WILL_FIRE_RL_startReadWrite,
       WILL_FIRE_RL_startWrite,
       WILL_FIRE_RL_wrMasters_0_fillBuffer,
       WILL_FIRE_RL_wrMasters_0_forwardData,
       WILL_FIRE_RL_wrMasters_0_placeAXI,
       WILL_FIRE_RL_wrMasters_0_placeRequest;

  // inputs to muxes for submodule ports
  reg MUX_lastCycle$write_1__VAL_1;
  wire [112 : 0] MUX_rdMasters_0_task_data_requests_reg$write_1__VAL_1,
		 MUX_wrMasters_0_task_data_requests_reg$write_1__VAL_1;
  wire [66 : 0] MUX_s_config_readSlave_out_rv$port1__write_1__VAL_1,
		MUX_s_config_readSlave_out_rv$port1__write_1__VAL_2,
		MUX_s_config_readSlave_out_rv$port1__write_1__VAL_3,
		MUX_s_config_readSlave_out_rv$port1__write_1__VAL_4,
		MUX_s_config_readSlave_out_rv$port1__write_1__VAL_5;
  wire [63 : 0] MUX_cycleCount$write_1__VAL_1, MUX_status$write_1__VAL_2;
  wire [44 : 0] MUX_rdMasters_0_task_data_output_reg$write_1__VAL_1,
		MUX_wrMasters_0_task_data_output_reg$write_1__VAL_1;
  wire [7 : 0] MUX_wrMasters_0_beatsThisRequestCntr$write_1__VAL_1;
  wire MUX_idle$write_1__SEL_1;

  // remaining internal signals
  reg [3 : 0] CASE_rdMasters_0_master_rd_warcachewget_1_rdM_ETC__q2,
	      CASE_rdMasters_0_read_rq_outD_OUT_BITS_14_TO__ETC__q6,
	      CASE_wrMasters_0_master_wr_wawcachewget_1_wrM_ETC__q3,
	      CASE_wrMasters_0_write_rq_outD_OUT_BITS_14_TO_ETC__q8;
  reg IF_operation_9_EQ_0_052_THEN_wrMasters_0_task__ETC___d1086;
  wire [511 : 0] d__h28397, x3__h21201, x3__h26632;
  wire [63 : 0] _theResult____h17453,
		_theResult____h23019,
		bytes_first___1__h17484,
		bytes_first___1__h23050,
		bytes_first__h17452,
		bytes_first__h23018,
		v__h5196,
		v__h5567,
		v__h5889,
		x__h17458,
		x__h23024,
		x_strb__h28589;
  wire [31 : 0] _theResult____h17631,
		_theResult____h23197,
		rdMasters_0_reqGen_incomingBufferD_OUT_BITS_3_ETC__q7,
		transfers_total___1__h17639,
		transfers_total___1__h23205,
		transfers_total__h17630,
		transfers_total__h17636,
		transfers_total__h23196,
		transfers_total__h23202,
		wrMasters_0_reqGen_incomingBufferD_OUT_BITS_3_ETC__q9,
		x__h17633,
		x__h17659,
		x__h23199,
		x__h23225,
		y__h17525,
		y__h17660,
		y__h17662,
		y__h23091,
		y__h23226,
		y__h23228;
  wire [25 : 0] _theResult____h17965,
		_theResult____h23531,
		rdMasters_0_reqGen_intermediateBuffer3_first___ETC___d275,
		request_data_requests_total__h17932,
		request_data_requests_total__h23498,
		requests_total___1__h17972,
		requests_total___1__h23538,
		requests_total__h17901,
		requests_total__h17969,
		requests_total__h23467,
		requests_total__h23535,
		wrMasters_0_reqGen_intermediateBuffer3_first___ETC___d532,
		x_requests_total__h20152,
		x_requests_total__h27198,
		x_transfers_total__h21757,
		x_transfers_total__h39509;
  wire [20 : 0] x_address_dynamic__h20154, x_address_dynamic__h27200;
  wire [12 : 0] x__h17859,
		x__h21278,
		x__h21373,
		x__h23425,
		x__h26709,
		x__h26804;
  wire [11 : 0] _0_CONCAT_rdMasters_0_read_rq_out_first__71_BIT_ETC___d374,
		_0_CONCAT_wrMasters_0_write_rq_out_first__67_BI_ETC___d670,
		addr_last__h17805,
		addr_last__h17806,
		addr_last__h23371,
		addr_last__h23372,
		b__h20519,
		b__h21970,
		b__h27949,
		b__h39635,
		barrier_transfers__h17849,
		barrier_transfers__h23415,
		y__h17826,
		y__h23392;
  wire [8 : 0] burst_length__h17803,
	       burst_length__h23369,
	       requests_first__h17734,
	       requests_first__h23300,
	       x__h17958,
	       x__h20083,
	       x__h20093,
	       x__h23524,
	       x__h27128,
	       x__h27138;
  wire [7 : 0] IF_rdMasters_0_task_data_requests_reg_34_BITS__ETC___d355,
	       IF_s_config_writeSlave_in_rv_BIT_3_THEN_s_conf_ETC__q1,
	       IF_s_config_writeSlave_in_rv_BIT_3_THEN_s_conf_ETC__q4,
	       IF_s_config_writeSlave_in_rv_BIT_3_THEN_s_conf_ETC__q5,
	       _theResult_____3__h27065,
	       beatsThisRequestCntrT__h28431;
  wire [6 : 0] IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740,
	       endByte___1__h31500,
	       endByte___1__h31526,
	       startByte___1__h31499,
	       x__h31486;
  wire [5 : 0] b__h28038, b__h28069;
  wire NOT_rdMasters_0_outgoingBuffer_rRdPtr_read__12_ETC___d432,
       NOT_rdMasters_0_outstanding_beats_port0__read__ETC___d376,
       NOT_rdMasters_0_task_data_output_reg_33_BITS_3_ETC___d1079,
       NOT_wrMasters_0_outstanding_beats_port0__read__ETC___d672,
       _dor1rdMasters_0_reqGen_incomingBuffer$EN_enq,
       _dor1wrMasters_0_reqGen_incomingBuffer$EN_enq,
       rdMasters_0_task_data_output_reg_33_BITS_32_TO_ETC___d1083,
       wrMasters_0_beatsThisRequestCntr_16_EQ_wrMaste_ETC___d718;

  // value method s_rd_arready
  assign S_AXI_arready = !s_config_readSlave_in_rv$port1__read[15] ;

  // value method s_rd_rvalid
  assign S_AXI_rvalid = s_config_readSlave_out_rv[66] ;

  // value method s_rd_rdata
  assign S_AXI_rdata =
	     s_config_readSlave_out_rv[66] ?
	       s_config_readSlave_out_rv[65:2] :
	       64'd0 ;

  // value method s_rd_rresp
  assign S_AXI_rresp =
	     s_config_readSlave_out_rv[66] ?
	       s_config_readSlave_out_rv[1:0] :
	       2'd0 ;

  // value method s_wr_awready
  assign S_AXI_awready = !s_config_writeSlave_addrIn_rv[15] ;

  // value method s_wr_wready
  assign S_AXI_wready = !s_config_writeSlave_dataIn_rv[72] ;

  // value method s_wr_bvalid
  assign S_AXI_bvalid = s_config_writeSlave_out_rv[2] ;

  // value method s_wr_bresp
  assign S_AXI_bresp =
	     s_config_writeSlave_out_rv[2] ?
	       s_config_writeSlave_out_rv[1:0] :
	       2'd0 ;

  // value method rds_0_arvalid
  assign M_AXI_HBM_0_arvalid = rdMasters_0_master_rd_in$EMPTY_N ;

  // value method rds_0_arid
  assign M_AXI_HBM_0_arid =
	     rdMasters_0_master_rd_in$EMPTY_N &&
	     rdMasters_0_master_rd_in$D_OUT[93] ;

  // value method rds_0_araddr
  assign M_AXI_HBM_0_araddr =
	     rdMasters_0_master_rd_in$EMPTY_N ?
	       rdMasters_0_master_rd_in$D_OUT[92:29] :
	       64'd0 ;

  // value method rds_0_arlen
  assign M_AXI_HBM_0_arlen =
	     rdMasters_0_master_rd_in$EMPTY_N ?
	       rdMasters_0_master_rd_in$D_OUT[28:21] :
	       8'd0 ;

  // value method rds_0_arsize
  assign M_AXI_HBM_0_arsize =
	     rdMasters_0_master_rd_in$EMPTY_N ?
	       rdMasters_0_master_rd_in$D_OUT[20:18] :
	       3'd0 ;

  // value method rds_0_arburst
  assign M_AXI_HBM_0_arburst =
	     rdMasters_0_master_rd_in$EMPTY_N ?
	       rdMasters_0_master_rd_in$D_OUT[17:16] :
	       2'd0 ;

  // value method rds_0_arlock
  assign M_AXI_HBM_0_arlock =
	     rdMasters_0_master_rd_in$EMPTY_N &&
	     rdMasters_0_master_rd_in$D_OUT[15] ;

  // value method rds_0_arcache
  assign M_AXI_HBM_0_arcache =
	     (!rdMasters_0_master_rd_in$EMPTY_N ||
	      rdMasters_0_master_rd_warcache$wget == 4'd0) ?
	       4'd0 :
	       CASE_rdMasters_0_master_rd_warcachewget_1_rdM_ETC__q2 ;

  // value method rds_0_arprot
  assign M_AXI_HBM_0_arprot =
	     rdMasters_0_master_rd_in$EMPTY_N ?
	       rdMasters_0_master_rd_in$D_OUT[10:8] :
	       3'd0 ;

  // value method rds_0_arqos
  assign M_AXI_HBM_0_arqos =
	     rdMasters_0_master_rd_in$EMPTY_N ?
	       rdMasters_0_master_rd_in$D_OUT[7:4] :
	       4'd0 ;

  // value method rds_0_arregion
  assign M_AXI_HBM_0_arregion =
	     rdMasters_0_master_rd_in$EMPTY_N ?
	       rdMasters_0_master_rd_in$D_OUT[3:0] :
	       4'd0 ;

  // value method rds_0_rready
  assign M_AXI_HBM_0_rready = rdMasters_0_master_rd_out$FULL_N ;

  // value method wrs_0_awvalid
  assign M_AXI_HBM_0_awvalid = wrMasters_0_master_wr_in_addr$EMPTY_N ;

  // value method wrs_0_awid
  assign M_AXI_HBM_0_awid =
	     wrMasters_0_master_wr_in_addr$EMPTY_N &&
	     wrMasters_0_master_wr_in_addr$D_OUT[93] ;

  // value method wrs_0_awaddr
  assign M_AXI_HBM_0_awaddr =
	     wrMasters_0_master_wr_in_addr$EMPTY_N ?
	       wrMasters_0_master_wr_in_addr$D_OUT[92:29] :
	       64'd0 ;

  // value method wrs_0_awlen
  assign M_AXI_HBM_0_awlen =
	     wrMasters_0_master_wr_in_addr$EMPTY_N ?
	       wrMasters_0_master_wr_in_addr$D_OUT[28:21] :
	       8'd0 ;

  // value method wrs_0_awsize
  assign M_AXI_HBM_0_awsize =
	     wrMasters_0_master_wr_in_addr$EMPTY_N ?
	       wrMasters_0_master_wr_in_addr$D_OUT[20:18] :
	       3'd0 ;

  // value method wrs_0_awburst
  assign M_AXI_HBM_0_awburst =
	     wrMasters_0_master_wr_in_addr$EMPTY_N ?
	       wrMasters_0_master_wr_in_addr$D_OUT[17:16] :
	       2'd0 ;

  // value method wrs_0_awlock
  assign M_AXI_HBM_0_awlock =
	     wrMasters_0_master_wr_in_addr$EMPTY_N &&
	     wrMasters_0_master_wr_in_addr$D_OUT[15] ;

  // value method wrs_0_awcache
  assign M_AXI_HBM_0_awcache =
	     (!wrMasters_0_master_wr_in_addr$EMPTY_N ||
	      wrMasters_0_master_wr_wawcache$wget == 4'd0) ?
	       4'd0 :
	       CASE_wrMasters_0_master_wr_wawcachewget_1_wrM_ETC__q3 ;

  // value method wrs_0_awprot
  assign M_AXI_HBM_0_awprot =
	     wrMasters_0_master_wr_in_addr$EMPTY_N ?
	       wrMasters_0_master_wr_in_addr$D_OUT[10:8] :
	       3'd0 ;

  // value method wrs_0_awqos
  assign M_AXI_HBM_0_awqos =
	     wrMasters_0_master_wr_in_addr$EMPTY_N ?
	       wrMasters_0_master_wr_in_addr$D_OUT[7:4] :
	       4'd0 ;

  // value method wrs_0_awregion
  assign M_AXI_HBM_0_awregion =
	     wrMasters_0_master_wr_in_addr$EMPTY_N ?
	       wrMasters_0_master_wr_in_addr$D_OUT[3:0] :
	       4'd0 ;

  // value method wrs_0_wvalid
  assign M_AXI_HBM_0_wvalid = wrMasters_0_master_wr_in_data$EMPTY_N ;

  // value method wrs_0_wdata
  assign M_AXI_HBM_0_wdata =
	     wrMasters_0_master_wr_in_data$EMPTY_N ?
	       wrMasters_0_master_wr_in_data$D_OUT[576:65] :
	       512'd0 ;

  // value method wrs_0_wstrb
  assign M_AXI_HBM_0_wstrb =
	     wrMasters_0_master_wr_in_data$EMPTY_N ?
	       wrMasters_0_master_wr_in_data$D_OUT[64:1] :
	       64'd0 ;

  // value method wrs_0_wlast
  assign M_AXI_HBM_0_wlast =
	     wrMasters_0_master_wr_in_data$EMPTY_N &&
	     wrMasters_0_master_wr_in_data$D_OUT[0] ;

  // value method wrs_0_bready
  assign M_AXI_HBM_0_bready = wrMasters_0_master_wr_out$FULL_N ;

  // value method interrupt
  assign interrupt = interruptR ;

  // submodule rdMasters_0_master_rd_in
  SizedFIFO #(.p1width(32'd94),
	      .p2depth(32'd32),
	      .p3cntr_width(32'd5),
	      .guarded(32'd1)) rdMasters_0_master_rd_in(.RST(RST_N),
							.CLK(CLK),
							.D_IN(rdMasters_0_master_rd_in$D_IN),
							.ENQ(rdMasters_0_master_rd_in$ENQ),
							.DEQ(rdMasters_0_master_rd_in$DEQ),
							.CLR(rdMasters_0_master_rd_in$CLR),
							.D_OUT(rdMasters_0_master_rd_in$D_OUT),
							.FULL_N(rdMasters_0_master_rd_in$FULL_N),
							.EMPTY_N(rdMasters_0_master_rd_in$EMPTY_N));

  // submodule rdMasters_0_master_rd_out
  FIFO2 #(.width(32'd516),
	  .guarded(32'd1)) rdMasters_0_master_rd_out(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(rdMasters_0_master_rd_out$D_IN),
						     .ENQ(rdMasters_0_master_rd_out$ENQ),
						     .DEQ(rdMasters_0_master_rd_out$DEQ),
						     .CLR(rdMasters_0_master_rd_out$CLR),
						     .D_OUT(rdMasters_0_master_rd_out$D_OUT),
						     .FULL_N(rdMasters_0_master_rd_out$FULL_N),
						     .EMPTY_N(rdMasters_0_master_rd_out$EMPTY_N));

  // submodule rdMasters_0_maxOutstandingFIFO
  SizedFIFO #(.p1width(32'd1),
	      .p2depth(32'd32),
	      .p3cntr_width(32'd5),
	      .guarded(32'd1)) rdMasters_0_maxOutstandingFIFO(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(rdMasters_0_maxOutstandingFIFO$D_IN),
							      .ENQ(rdMasters_0_maxOutstandingFIFO$ENQ),
							      .DEQ(rdMasters_0_maxOutstandingFIFO$DEQ),
							      .CLR(rdMasters_0_maxOutstandingFIFO$CLR),
							      .D_OUT(),
							      .FULL_N(rdMasters_0_maxOutstandingFIFO$FULL_N),
							      .EMPTY_N(rdMasters_0_maxOutstandingFIFO$EMPTY_N));

  // submodule rdMasters_0_outgoingBuffer_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd12),
	  .DATA_WIDTH(32'd512),
	  .MEMSIZE(13'd4096)) rdMasters_0_outgoingBuffer_memory(.CLKA(CLK),
								.CLKB(CLK),
								.ADDRA(rdMasters_0_outgoingBuffer_memory$ADDRA),
								.ADDRB(rdMasters_0_outgoingBuffer_memory$ADDRB),
								.DIA(rdMasters_0_outgoingBuffer_memory$DIA),
								.DIB(rdMasters_0_outgoingBuffer_memory$DIB),
								.WEA(rdMasters_0_outgoingBuffer_memory$WEA),
								.WEB(rdMasters_0_outgoingBuffer_memory$WEB),
								.ENA(rdMasters_0_outgoingBuffer_memory$ENA),
								.ENB(rdMasters_0_outgoingBuffer_memory$ENB),
								.DOA(),
								.DOB(rdMasters_0_outgoingBuffer_memory$DOB));

  // submodule rdMasters_0_read_rq_out
  FIFO2 #(.width(32'd94),
	  .guarded(32'd1)) rdMasters_0_read_rq_out(.RST(RST_N),
						   .CLK(CLK),
						   .D_IN(rdMasters_0_read_rq_out$D_IN),
						   .ENQ(rdMasters_0_read_rq_out$ENQ),
						   .DEQ(rdMasters_0_read_rq_out$DEQ),
						   .CLR(rdMasters_0_read_rq_out$CLR),
						   .D_OUT(rdMasters_0_read_rq_out$D_OUT),
						   .FULL_N(rdMasters_0_read_rq_out$FULL_N),
						   .EMPTY_N(rdMasters_0_read_rq_out$EMPTY_N));

  // submodule rdMasters_0_relaxationBuffer
  FIFO2 #(.width(32'd512),
	  .guarded(32'd1)) rdMasters_0_relaxationBuffer(.RST(RST_N),
							.CLK(CLK),
							.D_IN(rdMasters_0_relaxationBuffer$D_IN),
							.ENQ(rdMasters_0_relaxationBuffer$ENQ),
							.DEQ(rdMasters_0_relaxationBuffer$DEQ),
							.CLR(rdMasters_0_relaxationBuffer$CLR),
							.D_OUT(),
							.FULL_N(rdMasters_0_relaxationBuffer$FULL_N),
							.EMPTY_N(rdMasters_0_relaxationBuffer$EMPTY_N));

  // submodule rdMasters_0_reqGen_incomingBuffer
  FIFO2 #(.width(32'd100),
	  .guarded(32'd1)) rdMasters_0_reqGen_incomingBuffer(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(rdMasters_0_reqGen_incomingBuffer$D_IN),
							     .ENQ(rdMasters_0_reqGen_incomingBuffer$ENQ),
							     .DEQ(rdMasters_0_reqGen_incomingBuffer$DEQ),
							     .CLR(rdMasters_0_reqGen_incomingBuffer$CLR),
							     .D_OUT(rdMasters_0_reqGen_incomingBuffer$D_OUT),
							     .FULL_N(rdMasters_0_reqGen_incomingBuffer$FULL_N),
							     .EMPTY_N(rdMasters_0_reqGen_incomingBuffer$EMPTY_N));

  // submodule rdMasters_0_reqGen_intermediateBuffer
  FIFO2 #(.width(32'd112),
	  .guarded(32'd1)) rdMasters_0_reqGen_intermediateBuffer(.RST(RST_N),
								 .CLK(CLK),
								 .D_IN(rdMasters_0_reqGen_intermediateBuffer$D_IN),
								 .ENQ(rdMasters_0_reqGen_intermediateBuffer$ENQ),
								 .DEQ(rdMasters_0_reqGen_intermediateBuffer$DEQ),
								 .CLR(rdMasters_0_reqGen_intermediateBuffer$CLR),
								 .D_OUT(rdMasters_0_reqGen_intermediateBuffer$D_OUT),
								 .FULL_N(rdMasters_0_reqGen_intermediateBuffer$FULL_N),
								 .EMPTY_N(rdMasters_0_reqGen_intermediateBuffer$EMPTY_N));

  // submodule rdMasters_0_reqGen_intermediateBuffer2
  FIFO2 #(.width(32'd138),
	  .guarded(32'd1)) rdMasters_0_reqGen_intermediateBuffer2(.RST(RST_N),
								  .CLK(CLK),
								  .D_IN(rdMasters_0_reqGen_intermediateBuffer2$D_IN),
								  .ENQ(rdMasters_0_reqGen_intermediateBuffer2$ENQ),
								  .DEQ(rdMasters_0_reqGen_intermediateBuffer2$DEQ),
								  .CLR(rdMasters_0_reqGen_intermediateBuffer2$CLR),
								  .D_OUT(rdMasters_0_reqGen_intermediateBuffer2$D_OUT),
								  .FULL_N(rdMasters_0_reqGen_intermediateBuffer2$FULL_N),
								  .EMPTY_N(rdMasters_0_reqGen_intermediateBuffer2$EMPTY_N));

  // submodule rdMasters_0_reqGen_intermediateBuffer3
  FIFO2 #(.width(32'd147),
	  .guarded(32'd1)) rdMasters_0_reqGen_intermediateBuffer3(.RST(RST_N),
								  .CLK(CLK),
								  .D_IN(rdMasters_0_reqGen_intermediateBuffer3$D_IN),
								  .ENQ(rdMasters_0_reqGen_intermediateBuffer3$ENQ),
								  .DEQ(rdMasters_0_reqGen_intermediateBuffer3$DEQ),
								  .CLR(rdMasters_0_reqGen_intermediateBuffer3$CLR),
								  .D_OUT(rdMasters_0_reqGen_intermediateBuffer3$D_OUT),
								  .FULL_N(rdMasters_0_reqGen_intermediateBuffer3$FULL_N),
								  .EMPTY_N(rdMasters_0_reqGen_intermediateBuffer3$EMPTY_N));

  // submodule rdMasters_0_reqGen_outgoingBuffer
  FIFO2 #(.width(32'd158),
	  .guarded(32'd1)) rdMasters_0_reqGen_outgoingBuffer(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(rdMasters_0_reqGen_outgoingBuffer$D_IN),
							     .ENQ(rdMasters_0_reqGen_outgoingBuffer$ENQ),
							     .DEQ(rdMasters_0_reqGen_outgoingBuffer$DEQ),
							     .CLR(rdMasters_0_reqGen_outgoingBuffer$CLR),
							     .D_OUT(rdMasters_0_reqGen_outgoingBuffer$D_OUT),
							     .FULL_N(rdMasters_0_reqGen_outgoingBuffer$FULL_N),
							     .EMPTY_N(rdMasters_0_reqGen_outgoingBuffer$EMPTY_N));

  // submodule wrMasters_0_beatsPerRequestFIFO
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd32),
	      .p3cntr_width(32'd5),
	      .guarded(32'd1)) wrMasters_0_beatsPerRequestFIFO(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(wrMasters_0_beatsPerRequestFIFO$D_IN),
							       .ENQ(wrMasters_0_beatsPerRequestFIFO$ENQ),
							       .DEQ(wrMasters_0_beatsPerRequestFIFO$DEQ),
							       .CLR(wrMasters_0_beatsPerRequestFIFO$CLR),
							       .D_OUT(wrMasters_0_beatsPerRequestFIFO$D_OUT),
							       .FULL_N(wrMasters_0_beatsPerRequestFIFO$FULL_N),
							       .EMPTY_N(wrMasters_0_beatsPerRequestFIFO$EMPTY_N));

  // submodule wrMasters_0_incomingBuffer_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd12),
	  .DATA_WIDTH(32'd512),
	  .MEMSIZE(13'd4096)) wrMasters_0_incomingBuffer_memory(.CLKA(CLK),
								.CLKB(CLK),
								.ADDRA(wrMasters_0_incomingBuffer_memory$ADDRA),
								.ADDRB(wrMasters_0_incomingBuffer_memory$ADDRB),
								.DIA(wrMasters_0_incomingBuffer_memory$DIA),
								.DIB(wrMasters_0_incomingBuffer_memory$DIB),
								.WEA(wrMasters_0_incomingBuffer_memory$WEA),
								.WEB(wrMasters_0_incomingBuffer_memory$WEB),
								.ENA(wrMasters_0_incomingBuffer_memory$ENA),
								.ENB(wrMasters_0_incomingBuffer_memory$ENB),
								.DOA(),
								.DOB(wrMasters_0_incomingBuffer_memory$DOB));

  // submodule wrMasters_0_master_wr_in_addr
  SizedFIFO #(.p1width(32'd94),
	      .p2depth(32'd32),
	      .p3cntr_width(32'd5),
	      .guarded(32'd1)) wrMasters_0_master_wr_in_addr(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(wrMasters_0_master_wr_in_addr$D_IN),
							     .ENQ(wrMasters_0_master_wr_in_addr$ENQ),
							     .DEQ(wrMasters_0_master_wr_in_addr$DEQ),
							     .CLR(wrMasters_0_master_wr_in_addr$CLR),
							     .D_OUT(wrMasters_0_master_wr_in_addr$D_OUT),
							     .FULL_N(wrMasters_0_master_wr_in_addr$FULL_N),
							     .EMPTY_N(wrMasters_0_master_wr_in_addr$EMPTY_N));

  // submodule wrMasters_0_master_wr_in_data
  FIFO2 #(.width(32'd577),
	  .guarded(32'd1)) wrMasters_0_master_wr_in_data(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(wrMasters_0_master_wr_in_data$D_IN),
							 .ENQ(wrMasters_0_master_wr_in_data$ENQ),
							 .DEQ(wrMasters_0_master_wr_in_data$DEQ),
							 .CLR(wrMasters_0_master_wr_in_data$CLR),
							 .D_OUT(wrMasters_0_master_wr_in_data$D_OUT),
							 .FULL_N(wrMasters_0_master_wr_in_data$FULL_N),
							 .EMPTY_N(wrMasters_0_master_wr_in_data$EMPTY_N));

  // submodule wrMasters_0_master_wr_out
  FIFO2 #(.width(32'd3),
	  .guarded(32'd1)) wrMasters_0_master_wr_out(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(wrMasters_0_master_wr_out$D_IN),
						     .ENQ(wrMasters_0_master_wr_out$ENQ),
						     .DEQ(wrMasters_0_master_wr_out$DEQ),
						     .CLR(wrMasters_0_master_wr_out$CLR),
						     .D_OUT(),
						     .FULL_N(wrMasters_0_master_wr_out$FULL_N),
						     .EMPTY_N(wrMasters_0_master_wr_out$EMPTY_N));

  // submodule wrMasters_0_relaxationBuffer
  FIFO2 #(.width(32'd512),
	  .guarded(32'd1)) wrMasters_0_relaxationBuffer(.RST(RST_N),
							.CLK(CLK),
							.D_IN(wrMasters_0_relaxationBuffer$D_IN),
							.ENQ(wrMasters_0_relaxationBuffer$ENQ),
							.DEQ(wrMasters_0_relaxationBuffer$DEQ),
							.CLR(wrMasters_0_relaxationBuffer$CLR),
							.D_OUT(wrMasters_0_relaxationBuffer$D_OUT),
							.FULL_N(wrMasters_0_relaxationBuffer$FULL_N),
							.EMPTY_N(wrMasters_0_relaxationBuffer$EMPTY_N));

  // submodule wrMasters_0_reqGen_incomingBuffer
  FIFO2 #(.width(32'd100),
	  .guarded(32'd1)) wrMasters_0_reqGen_incomingBuffer(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(wrMasters_0_reqGen_incomingBuffer$D_IN),
							     .ENQ(wrMasters_0_reqGen_incomingBuffer$ENQ),
							     .DEQ(wrMasters_0_reqGen_incomingBuffer$DEQ),
							     .CLR(wrMasters_0_reqGen_incomingBuffer$CLR),
							     .D_OUT(wrMasters_0_reqGen_incomingBuffer$D_OUT),
							     .FULL_N(wrMasters_0_reqGen_incomingBuffer$FULL_N),
							     .EMPTY_N(wrMasters_0_reqGen_incomingBuffer$EMPTY_N));

  // submodule wrMasters_0_reqGen_intermediateBuffer
  FIFO2 #(.width(32'd112),
	  .guarded(32'd1)) wrMasters_0_reqGen_intermediateBuffer(.RST(RST_N),
								 .CLK(CLK),
								 .D_IN(wrMasters_0_reqGen_intermediateBuffer$D_IN),
								 .ENQ(wrMasters_0_reqGen_intermediateBuffer$ENQ),
								 .DEQ(wrMasters_0_reqGen_intermediateBuffer$DEQ),
								 .CLR(wrMasters_0_reqGen_intermediateBuffer$CLR),
								 .D_OUT(wrMasters_0_reqGen_intermediateBuffer$D_OUT),
								 .FULL_N(wrMasters_0_reqGen_intermediateBuffer$FULL_N),
								 .EMPTY_N(wrMasters_0_reqGen_intermediateBuffer$EMPTY_N));

  // submodule wrMasters_0_reqGen_intermediateBuffer2
  FIFO2 #(.width(32'd138),
	  .guarded(32'd1)) wrMasters_0_reqGen_intermediateBuffer2(.RST(RST_N),
								  .CLK(CLK),
								  .D_IN(wrMasters_0_reqGen_intermediateBuffer2$D_IN),
								  .ENQ(wrMasters_0_reqGen_intermediateBuffer2$ENQ),
								  .DEQ(wrMasters_0_reqGen_intermediateBuffer2$DEQ),
								  .CLR(wrMasters_0_reqGen_intermediateBuffer2$CLR),
								  .D_OUT(wrMasters_0_reqGen_intermediateBuffer2$D_OUT),
								  .FULL_N(wrMasters_0_reqGen_intermediateBuffer2$FULL_N),
								  .EMPTY_N(wrMasters_0_reqGen_intermediateBuffer2$EMPTY_N));

  // submodule wrMasters_0_reqGen_intermediateBuffer3
  FIFO2 #(.width(32'd147),
	  .guarded(32'd1)) wrMasters_0_reqGen_intermediateBuffer3(.RST(RST_N),
								  .CLK(CLK),
								  .D_IN(wrMasters_0_reqGen_intermediateBuffer3$D_IN),
								  .ENQ(wrMasters_0_reqGen_intermediateBuffer3$ENQ),
								  .DEQ(wrMasters_0_reqGen_intermediateBuffer3$DEQ),
								  .CLR(wrMasters_0_reqGen_intermediateBuffer3$CLR),
								  .D_OUT(wrMasters_0_reqGen_intermediateBuffer3$D_OUT),
								  .FULL_N(wrMasters_0_reqGen_intermediateBuffer3$FULL_N),
								  .EMPTY_N(wrMasters_0_reqGen_intermediateBuffer3$EMPTY_N));

  // submodule wrMasters_0_reqGen_outgoingBuffer
  FIFO2 #(.width(32'd158),
	  .guarded(32'd1)) wrMasters_0_reqGen_outgoingBuffer(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(wrMasters_0_reqGen_outgoingBuffer$D_IN),
							     .ENQ(wrMasters_0_reqGen_outgoingBuffer$ENQ),
							     .DEQ(wrMasters_0_reqGen_outgoingBuffer$DEQ),
							     .CLR(wrMasters_0_reqGen_outgoingBuffer$CLR),
							     .D_OUT(wrMasters_0_reqGen_outgoingBuffer$D_OUT),
							     .FULL_N(wrMasters_0_reqGen_outgoingBuffer$FULL_N),
							     .EMPTY_N(wrMasters_0_reqGen_outgoingBuffer$EMPTY_N));

  // submodule wrMasters_0_write_rq_out
  FIFO2 #(.width(32'd94),
	  .guarded(32'd1)) wrMasters_0_write_rq_out(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(wrMasters_0_write_rq_out$D_IN),
						    .ENQ(wrMasters_0_write_rq_out$ENQ),
						    .DEQ(wrMasters_0_write_rq_out$DEQ),
						    .CLR(wrMasters_0_write_rq_out$CLR),
						    .D_OUT(wrMasters_0_write_rq_out$D_OUT),
						    .FULL_N(wrMasters_0_write_rq_out$FULL_N),
						    .EMPTY_N(wrMasters_0_write_rq_out$EMPTY_N));

  // rule RL_s_config_axiReadSpecialIsHandled
  assign WILL_FIRE_RL_s_config_axiReadSpecialIsHandled =
	     s_config_readSlave_in_rv[15] &&
	     s_config_readSlave_in_rv[9:6] == 4'd0 ;

  // rule RL_s_config_axiReadSpecialIsHandled_1
  assign WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_1 =
	     s_config_readSlave_in_rv[15] &&
	     s_config_readSlave_in_rv[9:6] == 4'd2 ;

  // rule RL_s_config_axiReadSpecialIsHandled_2
  assign WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_2 =
	     s_config_readSlave_in_rv[15] &&
	     s_config_readSlave_in_rv[9:6] == 4'd4 ;

  // rule RL_s_config_axiReadSpecialIsHandled_3
  assign WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_3 =
	     s_config_readSlave_in_rv[15] &&
	     s_config_readSlave_in_rv[9:6] == 4'd6 ;

  // rule RL_s_config_axiReadSpecialIsHandled_4
  assign WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_4 =
	     s_config_readSlave_in_rv[15] &&
	     s_config_readSlave_in_rv[9:6] == 4'd8 ;

  // rule RL_s_config_axiReadSpecial
  assign WILL_FIRE_RL_s_config_axiReadSpecial =
	     s_config_readSlave_in_rv[15] &&
	     !s_config_readSlave_out_rv$port1__read[66] &&
	     s_config_readSlave_in_rv[9:6] == 4'd0 &&
	     !s_config_readBusy ;

  // rule RL_startWrite
  assign WILL_FIRE_RL_startWrite =
	     wrMasters_0_reqGen_incomingBuffer$FULL_N && idle && start &&
	     operation == 6'd0 ;

  // rule RL_startRead
  assign WILL_FIRE_RL_startRead =
	     rdMasters_0_reqGen_incomingBuffer$FULL_N && idle && start &&
	     operation == 6'd1 ;

  // rule RL_startReadWrite
  assign WILL_FIRE_RL_startReadWrite =
	     wrMasters_0_reqGen_incomingBuffer$FULL_N &&
	     rdMasters_0_reqGen_incomingBuffer$FULL_N &&
	     idle &&
	     start &&
	     operation == 6'd2 ;

  // rule RL_s_config_axiReadSpecial_1
  assign WILL_FIRE_RL_s_config_axiReadSpecial_1 =
	     s_config_readSlave_in_rv[15] &&
	     !s_config_readSlave_out_rv$port1__read[66] &&
	     s_config_readSlave_in_rv[9:6] == 4'd2 &&
	     !s_config_readBusy ;

  // rule RL_s_config_axiReadSpecial_2
  assign WILL_FIRE_RL_s_config_axiReadSpecial_2 =
	     s_config_readSlave_in_rv[15] &&
	     !s_config_readSlave_out_rv$port1__read[66] &&
	     s_config_readSlave_in_rv[9:6] == 4'd4 &&
	     !s_config_readBusy ;

  // rule RL_s_config_axiReadSpecial_3
  assign WILL_FIRE_RL_s_config_axiReadSpecial_3 =
	     s_config_readSlave_in_rv[15] &&
	     !s_config_readSlave_out_rv$port1__read[66] &&
	     s_config_readSlave_in_rv[9:6] == 4'd6 &&
	     !s_config_readBusy ;

  // rule RL_s_config_axiReadSpecial_4
  assign WILL_FIRE_RL_s_config_axiReadSpecial_4 =
	     s_config_readSlave_in_rv[15] &&
	     !s_config_readSlave_out_rv$port1__read[66] &&
	     s_config_readSlave_in_rv[9:6] == 4'd8 &&
	     !s_config_readBusy ;

  // rule RL_s_config_axiReadFallback
  assign WILL_FIRE_RL_s_config_axiReadFallback =
	     s_config_readSlave_in_rv[15] &&
	     !s_config_readSlave_out_rv$port1__read[66] &&
	     !s_config_readIsHandled$whas ;

  // rule RL_s_config_1_axiWriteSpecialIsHandled
  assign WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled =
	     s_config_writeSlave_in_rv[87] &&
	     s_config_writeSlave_in_rv[81:78] == 4'd0 ;

  // rule RL_s_config_1_axiWriteSpecial
  assign WILL_FIRE_RL_s_config_1_axiWriteSpecial =
	     s_config_writeSlave_in_rv[87] &&
	     !s_config_writeSlave_out_rv$port1__read[2] &&
	     s_config_writeSlave_in_rv[81:78] == 4'd0 &&
	     !s_config_writeBusy &&
	     !WILL_FIRE_RL_startReadWrite &&
	     !WILL_FIRE_RL_startRead &&
	     !WILL_FIRE_RL_startWrite ;

  // rule RL_s_config_1_axiWriteSpecialIsHandled_1
  assign WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_1 =
	     s_config_writeSlave_in_rv[87] &&
	     s_config_writeSlave_in_rv[81:78] == 4'd2 ;

  // rule RL_s_config_1_axiWriteSpecial_1
  assign WILL_FIRE_RL_s_config_1_axiWriteSpecial_1 =
	     s_config_writeSlave_in_rv[87] &&
	     !s_config_writeSlave_out_rv$port1__read[2] &&
	     s_config_writeSlave_in_rv[81:78] == 4'd2 &&
	     !s_config_writeBusy ;

  // rule RL_s_config_1_axiWriteSpecialIsHandled_2
  assign WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_2 =
	     s_config_writeSlave_in_rv[87] &&
	     s_config_writeSlave_in_rv[81:78] == 4'd4 ;

  // rule RL_s_config_1_axiWriteSpecial_2
  assign WILL_FIRE_RL_s_config_1_axiWriteSpecial_2 =
	     s_config_writeSlave_in_rv[87] &&
	     !s_config_writeSlave_out_rv$port1__read[2] &&
	     s_config_writeSlave_in_rv[81:78] == 4'd4 &&
	     !s_config_writeBusy ;

  // rule RL_s_config_1_axiWriteSpecialIsHandled_3
  assign WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_3 =
	     s_config_writeSlave_in_rv[87] &&
	     s_config_writeSlave_in_rv[81:78] == 4'd6 ;

  // rule RL_s_config_1_axiWriteSpecial_3
  assign WILL_FIRE_RL_s_config_1_axiWriteSpecial_3 =
	     s_config_writeSlave_in_rv[87] &&
	     !s_config_writeSlave_out_rv$port1__read[2] &&
	     s_config_writeSlave_in_rv[81:78] == 4'd6 &&
	     !s_config_writeBusy ;

  // rule RL_s_config_1_axiWriteSpecialIsHandled_4
  assign WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_4 =
	     s_config_writeSlave_in_rv[87] &&
	     s_config_writeSlave_in_rv[81:78] == 4'd8 ;

  // rule RL_s_config_1_axiWriteSpecial_4
  assign WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 =
	     s_config_writeSlave_in_rv[87] &&
	     !s_config_writeSlave_out_rv$port1__read[2] &&
	     s_config_writeSlave_in_rv[81:78] == 4'd8 &&
	     !s_config_writeBusy ;

  // rule RL_s_config_1_axiWriteFallback
  assign WILL_FIRE_RL_s_config_1_axiWriteFallback =
	     s_config_writeSlave_in_rv[87] &&
	     !s_config_writeSlave_out_rv$port1__read[2] &&
	     !s_config_writeIsHandled$whas &&
	     !WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 &&
	     !WILL_FIRE_RL_s_config_1_axiWriteSpecial_3 &&
	     !WILL_FIRE_RL_s_config_1_axiWriteSpecial_2 &&
	     !WILL_FIRE_RL_s_config_1_axiWriteSpecial_1 &&
	     !WILL_FIRE_RL_s_config_1_axiWriteSpecial ;

  // rule RL_rdMasters_0_placeRequest
  assign WILL_FIRE_RL_rdMasters_0_placeRequest =
	     rdMasters_0_read_rq_out$FULL_N &&
	     rdMasters_0_maxOutstandingFIFO$FULL_N &&
	     rdMasters_0_task_data_requests_reg[94:69] != 26'd0 ;

  // rule RL_rdMasters_0_fillBuffer
  assign WILL_FIRE_RL_rdMasters_0_fillBuffer =
	     rdMasters_0_reqGen_outgoingBuffer$EMPTY_N &&
	     rdMasters_0_task_data_output_reg[32:7] == 26'd0 &&
	     rdMasters_0_task_data_requests_reg[94:69] == 26'd0 ;

  // rule RL_rdMasters_0_placeAXI
  assign WILL_FIRE_RL_rdMasters_0_placeAXI =
	     rdMasters_0_read_rq_out$EMPTY_N &&
	     rdMasters_0_master_rd_in$FULL_N ;

  // rule RL_rdMasters_0_forwardData
  assign WILL_FIRE_RL_rdMasters_0_forwardData =
	     NOT_rdMasters_0_outgoingBuffer_rRdPtr_read__12_ETC___d432 &&
	     rdMasters_0_task_data_output_reg[32:7] != 26'd0 ;

  // rule RL_wrMasters_0_placeRequest
  assign WILL_FIRE_RL_wrMasters_0_placeRequest =
	     wrMasters_0_write_rq_out$FULL_N &&
	     wrMasters_0_beatsPerRequestFIFO$FULL_N &&
	     wrMasters_0_task_data_requests_reg[94:69] != 26'd0 ;

  // rule RL_wrMasters_0_fillBuffer
  assign WILL_FIRE_RL_wrMasters_0_fillBuffer =
	     wrMasters_0_reqGen_outgoingBuffer$EMPTY_N &&
	     wrMasters_0_task_data_output_reg[32:7] == 26'd0 &&
	     wrMasters_0_task_data_requests_reg[94:69] == 26'd0 &&
	     wrMasters_0_outstanding_writes == 6'd0 ;

  // rule RL_wrMasters_0_forwardData
  assign WILL_FIRE_RL_wrMasters_0_forwardData =
	     wrMasters_0_incomingBuffer_rRdPtr !=
	     wrMasters_0_incomingBuffer_rWrPtr &&
	     wrMasters_0_beatsPerRequestFIFO$EMPTY_N &&
	     wrMasters_0_master_wr_in_data$FULL_N &&
	     wrMasters_0_outstanding_writes_out != 6'd0 &&
	     wrMasters_0_task_data_output_reg[32:7] != 26'd0 ;

  // rule RL_wrMasters_0_placeAXI
  assign WILL_FIRE_RL_wrMasters_0_placeAXI =
	     wrMasters_0_write_rq_out$EMPTY_N &&
	     wrMasters_0_master_wr_in_addr$FULL_N ;

  // inputs to muxes for submodule ports
  assign MUX_idle$write_1__SEL_1 =
	     !idle &&
	     IF_operation_9_EQ_0_052_THEN_wrMasters_0_task__ETC___d1086 &&
	     lastCycle ;
  assign MUX_cycleCount$write_1__VAL_1 = cycleCount + 64'd1 ;
  always@(operation or
	  NOT_rdMasters_0_task_data_output_reg_33_BITS_3_ETC___d1079 or
	  wrMasters_0_task_data_output_reg or
	  wrMasters_0_task_data_requests_reg or
	  wrMasters_0_outstanding_writes or
	  rdMasters_0_task_data_output_reg or
	  rdMasters_0_task_data_requests_reg)
  begin
    case (operation)
      6'd0:
	  MUX_lastCycle$write_1__VAL_1 =
	      wrMasters_0_task_data_output_reg[32:7] != 26'd0 ||
	      wrMasters_0_task_data_requests_reg[94:69] != 26'd0 ||
	      wrMasters_0_outstanding_writes != 6'd0;
      6'd1:
	  MUX_lastCycle$write_1__VAL_1 =
	      rdMasters_0_task_data_output_reg[32:7] != 26'd0 ||
	      rdMasters_0_task_data_requests_reg[94:69] != 26'd0;
      default: MUX_lastCycle$write_1__VAL_1 =
		   NOT_rdMasters_0_task_data_output_reg_33_BITS_3_ETC___d1079;
    endcase
  end
  assign MUX_rdMasters_0_task_data_output_reg$write_1__VAL_1 =
	     { rdMasters_0_task_data_output_reg[44:33],
	       x_transfers_total__h21757,
	       rdMasters_0_task_data_output_reg[6:0] } ;
  assign MUX_rdMasters_0_task_data_requests_reg$write_1__VAL_1 =
	     { rdMasters_0_task_data_requests_reg[112:95],
	       x_requests_total__h20152,
	       rdMasters_0_task_data_requests_reg[68:38],
	       x_address_dynamic__h20154,
	       12'd0,
	       rdMasters_0_task_data_requests_reg[4:1],
	       1'd0 } ;
  assign MUX_s_config_readSlave_out_rv$port1__write_1__VAL_1 =
	     { 1'd1, v__h5196, 2'd0 } ;
  assign MUX_s_config_readSlave_out_rv$port1__write_1__VAL_2 =
	     { 1'd1, status, 2'd0 } ;
  assign MUX_s_config_readSlave_out_rv$port1__write_1__VAL_3 =
	     { 1'd1, v__h5567, 2'd0 } ;
  assign MUX_s_config_readSlave_out_rv$port1__write_1__VAL_4 =
	     { 1'd1, length, 2'd0 } ;
  assign MUX_s_config_readSlave_out_rv$port1__write_1__VAL_5 =
	     { 1'd1, v__h5889, 2'd0 } ;
  assign MUX_status$write_1__VAL_2 =
	     { s_config_writeSlave_in_rv[10] ?
		 s_config_writeSlave_in_rv[74:67] :
		 status[63:56],
	       s_config_writeSlave_in_rv[9] ?
		 s_config_writeSlave_in_rv[66:59] :
		 status[55:48],
	       s_config_writeSlave_in_rv[8] ?
		 s_config_writeSlave_in_rv[58:51] :
		 status[47:40],
	       s_config_writeSlave_in_rv[7] ?
		 s_config_writeSlave_in_rv[50:43] :
		 status[39:32],
	       s_config_writeSlave_in_rv[6] ?
		 s_config_writeSlave_in_rv[42:35] :
		 status[31:24],
	       s_config_writeSlave_in_rv[5] ?
		 s_config_writeSlave_in_rv[34:27] :
		 status[23:16],
	       s_config_writeSlave_in_rv[4] ?
		 s_config_writeSlave_in_rv[26:19] :
		 status[15:8],
	       s_config_writeSlave_in_rv[3] ?
		 s_config_writeSlave_in_rv[18:11] :
		 status[7:0] } ;
  assign MUX_wrMasters_0_beatsThisRequestCntr$write_1__VAL_1 =
	     wrMasters_0_beatsThisRequestCntr_16_EQ_wrMaste_ETC___d718 ?
	       8'd0 :
	       beatsThisRequestCntrT__h28431 ;
  assign MUX_wrMasters_0_task_data_output_reg$write_1__VAL_1 =
	     { wrMasters_0_task_data_output_reg[44:33],
	       x_transfers_total__h39509,
	       wrMasters_0_task_data_output_reg[6:1],
	       1'd0 } ;
  assign MUX_wrMasters_0_task_data_requests_reg$write_1__VAL_1 =
	     { wrMasters_0_task_data_requests_reg[112:95],
	       x_requests_total__h27198,
	       wrMasters_0_task_data_requests_reg[68:38],
	       x_address_dynamic__h27200,
	       12'd0,
	       wrMasters_0_task_data_requests_reg[4:1],
	       1'd0 } ;

  // inlined wires
  assign s_config_readIsHandled$whas =
	     WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_4 ||
	     WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_3 ||
	     WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_2 ||
	     WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_1 ||
	     WILL_FIRE_RL_s_config_axiReadSpecialIsHandled ;
  assign s_config_writeIsHandled$whas =
	     WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_4 ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_3 ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_2 ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_1 ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled ;
  always@(rdMasters_0_master_rd_in$D_OUT)
  begin
    case (rdMasters_0_master_rd_in$D_OUT[14:11])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd10, 4'd14, 4'd15:
	  rdMasters_0_master_rd_warcache$wget =
	      rdMasters_0_master_rd_in$D_OUT[14:11];
      default: rdMasters_0_master_rd_warcache$wget = 4'd11;
    endcase
  end
  assign rdMasters_0_outgoingBuffer_wDataOut$wget =
	     (rdMasters_0_outgoingBuffer_rCache[525] &&
	      rdMasters_0_outgoingBuffer_rCache[524:512] ==
	      rdMasters_0_outgoingBuffer_rRdPtr) ?
	       rdMasters_0_outgoingBuffer_rCache[511:0] :
	       rdMasters_0_outgoingBuffer_memory$DOB ;
  always@(wrMasters_0_master_wr_in_addr$D_OUT)
  begin
    case (wrMasters_0_master_wr_in_addr$D_OUT[14:11])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd6, 4'd7, 4'd14:
	  wrMasters_0_master_wr_wawcache$wget =
	      wrMasters_0_master_wr_in_addr$D_OUT[14:11];
      default: wrMasters_0_master_wr_wawcache$wget = 4'd15;
    endcase
  end
  assign rdMasters_0_outgoingBuffer_pwDequeue$whas =
	     rdMasters_0_outgoingBuffer_rRdPtr !=
	     rdMasters_0_outgoingBuffer_rWrPtr &&
	     rdMasters_0_relaxationBuffer$FULL_N ;
  assign wrMasters_0_incomingBuffer_pwEnqueue$whas =
	     wrMasters_0_incomingBuffer_rRdPtr + 13'd2048 !=
	     wrMasters_0_incomingBuffer_rWrPtr &&
	     wrMasters_0_relaxationBuffer$EMPTY_N ;
  assign rdMasters_0_master_rd_rinpkg$wget =
	     { M_AXI_HBM_0_rid,
	       M_AXI_HBM_0_rdata,
	       M_AXI_HBM_0_rresp,
	       M_AXI_HBM_0_rlast } ;
  assign wrMasters_0_master_wr_rinpkg$wget =
	     { M_AXI_HBM_0_bid, M_AXI_HBM_0_bresp } ;
  assign s_config_readSlave_in_rv$EN_port0__write =
	     WILL_FIRE_RL_s_config_axiReadFallback ||
	     WILL_FIRE_RL_s_config_axiReadSpecial_4 ||
	     WILL_FIRE_RL_s_config_axiReadSpecial_3 ||
	     WILL_FIRE_RL_s_config_axiReadSpecial_2 ||
	     WILL_FIRE_RL_s_config_axiReadSpecial_1 ||
	     WILL_FIRE_RL_s_config_axiReadSpecial ;
  assign s_config_readSlave_in_rv$port1__read =
	     s_config_readSlave_in_rv$EN_port0__write ?
	       16'd10922 :
	       s_config_readSlave_in_rv ;
  assign s_config_readSlave_in_rv$EN_port1__write =
	     !s_config_readSlave_in_rv$port1__read[15] && S_AXI_arvalid ;
  assign s_config_readSlave_in_rv$port1__write_1 =
	     { 1'd1, S_AXI_araddr, S_AXI_arprot } ;
  assign s_config_readSlave_in_rv$port2__read =
	     s_config_readSlave_in_rv$EN_port1__write ?
	       s_config_readSlave_in_rv$port1__write_1 :
	       s_config_readSlave_in_rv$port1__read ;
  assign s_config_readSlave_out_rv$EN_port0__write =
	     s_config_readSlave_out_rv[66] && S_AXI_rready ;
  assign s_config_readSlave_out_rv$port1__read =
	     s_config_readSlave_out_rv$EN_port0__write ?
	       67'h2AAAAAAAAAAAAAAAA :
	       s_config_readSlave_out_rv ;
  assign s_config_readSlave_out_rv$EN_port1__write =
	     WILL_FIRE_RL_s_config_axiReadSpecial ||
	     WILL_FIRE_RL_s_config_axiReadSpecial_1 ||
	     WILL_FIRE_RL_s_config_axiReadSpecial_2 ||
	     WILL_FIRE_RL_s_config_axiReadSpecial_3 ||
	     WILL_FIRE_RL_s_config_axiReadSpecial_4 ||
	     WILL_FIRE_RL_s_config_axiReadFallback ;
  always@(WILL_FIRE_RL_s_config_axiReadSpecial or
	  MUX_s_config_readSlave_out_rv$port1__write_1__VAL_1 or
	  WILL_FIRE_RL_s_config_axiReadSpecial_1 or
	  MUX_s_config_readSlave_out_rv$port1__write_1__VAL_2 or
	  WILL_FIRE_RL_s_config_axiReadSpecial_2 or
	  MUX_s_config_readSlave_out_rv$port1__write_1__VAL_3 or
	  WILL_FIRE_RL_s_config_axiReadSpecial_3 or
	  MUX_s_config_readSlave_out_rv$port1__write_1__VAL_4 or
	  WILL_FIRE_RL_s_config_axiReadSpecial_4 or
	  MUX_s_config_readSlave_out_rv$port1__write_1__VAL_5 or
	  WILL_FIRE_RL_s_config_axiReadFallback)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_s_config_axiReadSpecial:
	  s_config_readSlave_out_rv$port1__write_1 =
	      MUX_s_config_readSlave_out_rv$port1__write_1__VAL_1;
      WILL_FIRE_RL_s_config_axiReadSpecial_1:
	  s_config_readSlave_out_rv$port1__write_1 =
	      MUX_s_config_readSlave_out_rv$port1__write_1__VAL_2;
      WILL_FIRE_RL_s_config_axiReadSpecial_2:
	  s_config_readSlave_out_rv$port1__write_1 =
	      MUX_s_config_readSlave_out_rv$port1__write_1__VAL_3;
      WILL_FIRE_RL_s_config_axiReadSpecial_3:
	  s_config_readSlave_out_rv$port1__write_1 =
	      MUX_s_config_readSlave_out_rv$port1__write_1__VAL_4;
      WILL_FIRE_RL_s_config_axiReadSpecial_4:
	  s_config_readSlave_out_rv$port1__write_1 =
	      MUX_s_config_readSlave_out_rv$port1__write_1__VAL_5;
      WILL_FIRE_RL_s_config_axiReadFallback:
	  s_config_readSlave_out_rv$port1__write_1 = 67'h40000000000000000;
      default: s_config_readSlave_out_rv$port1__write_1 =
		   67'h2AAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign s_config_readSlave_out_rv$port2__read =
	     s_config_readSlave_out_rv$EN_port1__write ?
	       s_config_readSlave_out_rv$port1__write_1 :
	       s_config_readSlave_out_rv$port1__read ;
  assign s_config_writeSlave_in_rv$EN_port0__write =
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial_3 ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial_2 ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial_1 ||
	     WILL_FIRE_RL_s_config_1_axiWriteFallback ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial ;
  assign s_config_writeSlave_in_rv$port1__read =
	     s_config_writeSlave_in_rv$EN_port0__write ?
	       88'h2AAAAAAAAAAAAAAAAAAAAA :
	       s_config_writeSlave_in_rv ;
  assign s_config_writeSlave_in_rv$EN_port1__write =
	     s_config_writeSlave_addrIn_rv$port1__read[15] &&
	     s_config_writeSlave_dataIn_rv$port1__read[72] &&
	     !s_config_writeSlave_in_rv$port1__read[87] ;
  assign s_config_writeSlave_in_rv$port1__write_1 =
	     { 1'd1,
	       s_config_writeSlave_addrIn_rv$port1__read[14:3],
	       s_config_writeSlave_dataIn_rv$port1__read[71:0],
	       s_config_writeSlave_addrIn_rv$port1__read[2:0] } ;
  assign s_config_writeSlave_in_rv$port2__read =
	     s_config_writeSlave_in_rv$EN_port1__write ?
	       s_config_writeSlave_in_rv$port1__write_1 :
	       s_config_writeSlave_in_rv$port1__read ;
  assign s_config_writeSlave_out_rv$EN_port0__write =
	     s_config_writeSlave_out_rv[2] && S_AXI_bready ;
  assign s_config_writeSlave_out_rv$port1__read =
	     s_config_writeSlave_out_rv$EN_port0__write ?
	       3'd2 :
	       s_config_writeSlave_out_rv ;
  assign s_config_writeSlave_out_rv$EN_port1__write =
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial_3 ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial_2 ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial_1 ||
	     WILL_FIRE_RL_s_config_1_axiWriteFallback ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial ;
  assign s_config_writeSlave_out_rv$port2__read =
	     s_config_writeSlave_out_rv$EN_port1__write ?
	       3'd4 :
	       s_config_writeSlave_out_rv$port1__read ;
  assign s_config_writeSlave_addrIn_rv$EN_port0__write =
	     !s_config_writeSlave_addrIn_rv[15] && S_AXI_awvalid ;
  assign s_config_writeSlave_addrIn_rv$port0__write_1 =
	     { 1'd1, S_AXI_awaddr, S_AXI_awprot } ;
  assign s_config_writeSlave_addrIn_rv$port1__read =
	     s_config_writeSlave_addrIn_rv$EN_port0__write ?
	       s_config_writeSlave_addrIn_rv$port0__write_1 :
	       s_config_writeSlave_addrIn_rv ;
  assign s_config_writeSlave_addrIn_rv$EN_port1__write =
	     s_config_writeSlave_addrIn_rv$port1__read[15] &&
	     s_config_writeSlave_dataIn_rv$port1__read[72] &&
	     !s_config_writeSlave_in_rv$port1__read[87] ;
  assign s_config_writeSlave_addrIn_rv$port2__read =
	     s_config_writeSlave_addrIn_rv$EN_port1__write ?
	       16'd10922 :
	       s_config_writeSlave_addrIn_rv$port1__read ;
  assign s_config_writeSlave_dataIn_rv$EN_port0__write =
	     !s_config_writeSlave_dataIn_rv[72] && S_AXI_wvalid ;
  assign s_config_writeSlave_dataIn_rv$port0__write_1 =
	     { 1'd1, S_AXI_wdata, S_AXI_wstrb } ;
  assign s_config_writeSlave_dataIn_rv$port1__read =
	     s_config_writeSlave_dataIn_rv$EN_port0__write ?
	       s_config_writeSlave_dataIn_rv$port0__write_1 :
	       s_config_writeSlave_dataIn_rv ;
  assign s_config_writeSlave_dataIn_rv$EN_port1__write =
	     s_config_writeSlave_addrIn_rv$port1__read[15] &&
	     s_config_writeSlave_dataIn_rv$port1__read[72] &&
	     !s_config_writeSlave_in_rv$port1__read[87] ;
  assign s_config_writeSlave_dataIn_rv$port2__read =
	     s_config_writeSlave_dataIn_rv$EN_port1__write ?
	       73'h0AAAAAAAAAAAAAAAAAA :
	       s_config_writeSlave_dataIn_rv$port1__read ;
  assign rdMasters_0_outstanding_beats$EN_port0__write =
	     WILL_FIRE_RL_rdMasters_0_placeAXI &&
	     NOT_rdMasters_0_outstanding_beats_port0__read__ETC___d376 ;
  assign rdMasters_0_outstanding_beats$port0__write_1 =
	     rdMasters_0_outstanding_beats -
	     _0_CONCAT_rdMasters_0_read_rq_out_first__71_BIT_ETC___d374 ;
  assign rdMasters_0_outstanding_beats$EN_port1__write =
	     rdMasters_0_outgoingBuffer_rRdPtr !=
	     rdMasters_0_outgoingBuffer_rWrPtr &&
	     rdMasters_0_relaxationBuffer$FULL_N ;
  assign rdMasters_0_outstanding_beats$port1__write_1 = b__h21970 + 12'd1 ;
  assign rdMasters_0_outstanding_beats$port2__read =
	     rdMasters_0_outstanding_beats$EN_port1__write ?
	       rdMasters_0_outstanding_beats$port1__write_1 :
	       b__h21970 ;
  assign wrMasters_0_outstanding_beats$EN_port0__write =
	     WILL_FIRE_RL_wrMasters_0_placeAXI &&
	     NOT_wrMasters_0_outstanding_beats_port0__read__ETC___d672 ;
  assign wrMasters_0_outstanding_beats$port0__write_1 =
	     wrMasters_0_outstanding_beats -
	     _0_CONCAT_wrMasters_0_write_rq_out_first__67_BI_ETC___d670 ;
  assign wrMasters_0_outstanding_beats$EN_port1__write =
	     wrMasters_0_incomingBuffer_rRdPtr + 13'd2048 !=
	     wrMasters_0_incomingBuffer_rWrPtr &&
	     wrMasters_0_relaxationBuffer$EMPTY_N ;
  assign wrMasters_0_outstanding_beats$port1__write_1 = b__h39635 + 12'd1 ;
  assign wrMasters_0_outstanding_beats$port2__read =
	     wrMasters_0_outstanding_beats$EN_port1__write ?
	       wrMasters_0_outstanding_beats$port1__write_1 :
	       b__h39635 ;
  assign wrMasters_0_outstanding_writes$port0__write_1 =
	     wrMasters_0_outstanding_writes - 6'd1 ;
  assign wrMasters_0_outstanding_writes$EN_port1__write =
	     WILL_FIRE_RL_wrMasters_0_placeAXI &&
	     NOT_wrMasters_0_outstanding_beats_port0__read__ETC___d672 ;
  assign wrMasters_0_outstanding_writes$port1__write_1 = b__h28038 + 6'd1 ;
  assign wrMasters_0_outstanding_writes$port2__read =
	     wrMasters_0_outstanding_writes$EN_port1__write ?
	       wrMasters_0_outstanding_writes$port1__write_1 :
	       b__h28038 ;
  assign wrMasters_0_outstanding_writes_out$EN_port0__write =
	     WILL_FIRE_RL_wrMasters_0_forwardData &&
	     wrMasters_0_beatsThisRequestCntr_16_EQ_wrMaste_ETC___d718 ;
  assign wrMasters_0_outstanding_writes_out$port0__write_1 =
	     wrMasters_0_outstanding_writes_out - 6'd1 ;
  assign wrMasters_0_outstanding_writes_out$EN_port1__write =
	     WILL_FIRE_RL_wrMasters_0_placeAXI &&
	     NOT_wrMasters_0_outstanding_beats_port0__read__ETC___d672 ;
  assign wrMasters_0_outstanding_writes_out$port1__write_1 =
	     b__h28069 + 6'd1 ;
  assign wrMasters_0_outstanding_writes_out$port2__read =
	     wrMasters_0_outstanding_writes_out$EN_port1__write ?
	       wrMasters_0_outstanding_writes_out$port1__write_1 :
	       b__h28069 ;

  // register cycleCount
  assign cycleCount$D_IN = (!idle) ? MUX_cycleCount$write_1__VAL_1 : 64'd0 ;
  assign cycleCount$EN =
	     !idle || WILL_FIRE_RL_startReadWrite || WILL_FIRE_RL_startRead ||
	     WILL_FIRE_RL_startWrite ;

  // register idle
  assign idle$D_IN = MUX_idle$write_1__SEL_1 ;
  assign idle$EN =
	     !idle &&
	     IF_operation_9_EQ_0_052_THEN_wrMasters_0_task__ETC___d1086 &&
	     lastCycle ||
	     WILL_FIRE_RL_startReadWrite ||
	     WILL_FIRE_RL_startRead ||
	     WILL_FIRE_RL_startWrite ;

  // register interruptR
  assign interruptR$D_IN = MUX_idle$write_1__SEL_1 ;
  assign interruptR$EN = 1'd1 ;

  // register intf_count
  assign intf_count$D_IN =
	     IF_s_config_writeSlave_in_rv_BIT_3_THEN_s_conf_ETC__q4[5:0] ;
  assign intf_count$EN = WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 ;

  // register lastCycle
  assign lastCycle$D_IN = !idle && MUX_lastCycle$write_1__VAL_1 ;
  assign lastCycle$EN =
	     !idle || WILL_FIRE_RL_startReadWrite || WILL_FIRE_RL_startRead ||
	     WILL_FIRE_RL_startWrite ;

  // register length
  assign length$D_IN =
	     { s_config_writeSlave_in_rv[10] ?
		 s_config_writeSlave_in_rv[74:67] :
		 length[63:56],
	       s_config_writeSlave_in_rv[9] ?
		 s_config_writeSlave_in_rv[66:59] :
		 length[55:48],
	       s_config_writeSlave_in_rv[8] ?
		 s_config_writeSlave_in_rv[58:51] :
		 length[47:40],
	       s_config_writeSlave_in_rv[7] ?
		 s_config_writeSlave_in_rv[50:43] :
		 length[39:32],
	       s_config_writeSlave_in_rv[6] ?
		 s_config_writeSlave_in_rv[42:35] :
		 length[31:24],
	       s_config_writeSlave_in_rv[5] ?
		 s_config_writeSlave_in_rv[34:27] :
		 length[23:16],
	       s_config_writeSlave_in_rv[4] ?
		 s_config_writeSlave_in_rv[26:19] :
		 length[15:8],
	       s_config_writeSlave_in_rv[3] ?
		 s_config_writeSlave_in_rv[18:11] :
		 length[7:0] } ;
  assign length$EN = WILL_FIRE_RL_s_config_1_axiWriteSpecial_3 ;

  // register operation
  assign operation$D_IN =
	     IF_s_config_writeSlave_in_rv_BIT_3_THEN_s_conf_ETC__q5[5:0] ;
  assign operation$EN = WILL_FIRE_RL_s_config_1_axiWriteSpecial_2 ;

  // register rdMasters_0_outgoingBuffer_rCache
  assign rdMasters_0_outgoingBuffer_rCache$D_IN =
	     { 1'd1, rdMasters_0_outgoingBuffer_rWrPtr, x3__h21201 } ;
  assign rdMasters_0_outgoingBuffer_rCache$EN =
	     WILL_FIRE_RL_rdMasters_0_forwardData ;

  // register rdMasters_0_outgoingBuffer_rRdPtr
  assign rdMasters_0_outgoingBuffer_rRdPtr$D_IN = x__h21373 ;
  assign rdMasters_0_outgoingBuffer_rRdPtr$EN =
	     rdMasters_0_outgoingBuffer_pwDequeue$whas ;

  // register rdMasters_0_outgoingBuffer_rWrPtr
  assign rdMasters_0_outgoingBuffer_rWrPtr$D_IN = x__h21278 ;
  assign rdMasters_0_outgoingBuffer_rWrPtr$EN =
	     WILL_FIRE_RL_rdMasters_0_forwardData ;

  // register rdMasters_0_outstanding_beats
  assign rdMasters_0_outstanding_beats$D_IN =
	     rdMasters_0_outstanding_beats$port2__read ;
  assign rdMasters_0_outstanding_beats$EN = 1'b1 ;

  // register rdMasters_0_task_data_output_reg
  assign rdMasters_0_task_data_output_reg$D_IN =
	     WILL_FIRE_RL_rdMasters_0_forwardData ?
	       MUX_rdMasters_0_task_data_output_reg$write_1__VAL_1 :
	       rdMasters_0_reqGen_outgoingBuffer$D_OUT[44:0] ;
  assign rdMasters_0_task_data_output_reg$EN =
	     WILL_FIRE_RL_rdMasters_0_forwardData ||
	     WILL_FIRE_RL_rdMasters_0_fillBuffer ;

  // register rdMasters_0_task_data_requests_reg
  assign rdMasters_0_task_data_requests_reg$D_IN =
	     WILL_FIRE_RL_rdMasters_0_placeRequest ?
	       MUX_rdMasters_0_task_data_requests_reg$write_1__VAL_1 :
	       rdMasters_0_reqGen_outgoingBuffer$D_OUT[157:45] ;
  assign rdMasters_0_task_data_requests_reg$EN =
	     WILL_FIRE_RL_rdMasters_0_placeRequest ||
	     WILL_FIRE_RL_rdMasters_0_fillBuffer ;

  // register s_config_readBusy
  assign s_config_readBusy$D_IN = 1'b0 ;
  assign s_config_readBusy$EN = 1'b0 ;

  // register s_config_readSlave_in_rv
  assign s_config_readSlave_in_rv$D_IN =
	     s_config_readSlave_in_rv$port2__read ;
  assign s_config_readSlave_in_rv$EN = 1'b1 ;

  // register s_config_readSlave_out_rv
  assign s_config_readSlave_out_rv$D_IN =
	     s_config_readSlave_out_rv$port2__read ;
  assign s_config_readSlave_out_rv$EN = 1'b1 ;

  // register s_config_writeBusy
  assign s_config_writeBusy$D_IN = 1'b0 ;
  assign s_config_writeBusy$EN = 1'b0 ;

  // register s_config_writeSlave_addrIn_rv
  assign s_config_writeSlave_addrIn_rv$D_IN =
	     s_config_writeSlave_addrIn_rv$port2__read ;
  assign s_config_writeSlave_addrIn_rv$EN = 1'b1 ;

  // register s_config_writeSlave_dataIn_rv
  assign s_config_writeSlave_dataIn_rv$D_IN =
	     s_config_writeSlave_dataIn_rv$port2__read ;
  assign s_config_writeSlave_dataIn_rv$EN = 1'b1 ;

  // register s_config_writeSlave_in_rv
  assign s_config_writeSlave_in_rv$D_IN =
	     s_config_writeSlave_in_rv$port2__read ;
  assign s_config_writeSlave_in_rv$EN = 1'b1 ;

  // register s_config_writeSlave_out_rv
  assign s_config_writeSlave_out_rv$D_IN =
	     s_config_writeSlave_out_rv$port2__read ;
  assign s_config_writeSlave_out_rv$EN = 1'b1 ;

  // register start
  assign start$D_IN =
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial &&
	     IF_s_config_writeSlave_in_rv_BIT_3_THEN_s_conf_ETC__q1[0] ;
  assign start$EN =
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial ||
	     WILL_FIRE_RL_startReadWrite ||
	     WILL_FIRE_RL_startRead ||
	     WILL_FIRE_RL_startWrite ;

  // register status
  assign status$D_IN =
	     MUX_idle$write_1__SEL_1 ?
	       cycleCount :
	       MUX_status$write_1__VAL_2 ;
  assign status$EN =
	     !idle &&
	     IF_operation_9_EQ_0_052_THEN_wrMasters_0_task__ETC___d1086 &&
	     lastCycle ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial_1 ;

  // register wrMasters_0_beatsThisRequestCntr
  assign wrMasters_0_beatsThisRequestCntr$D_IN =
	     WILL_FIRE_RL_wrMasters_0_forwardData ?
	       MUX_wrMasters_0_beatsThisRequestCntr$write_1__VAL_1 :
	       8'd0 ;
  assign wrMasters_0_beatsThisRequestCntr$EN =
	     WILL_FIRE_RL_wrMasters_0_forwardData ||
	     WILL_FIRE_RL_wrMasters_0_fillBuffer ;

  // register wrMasters_0_incomingBuffer_rCache
  assign wrMasters_0_incomingBuffer_rCache$D_IN =
	     { 1'd1, wrMasters_0_incomingBuffer_rWrPtr, x3__h26632 } ;
  assign wrMasters_0_incomingBuffer_rCache$EN =
	     wrMasters_0_incomingBuffer_pwEnqueue$whas ;

  // register wrMasters_0_incomingBuffer_rRdPtr
  assign wrMasters_0_incomingBuffer_rRdPtr$D_IN = x__h26804 ;
  assign wrMasters_0_incomingBuffer_rRdPtr$EN =
	     WILL_FIRE_RL_wrMasters_0_forwardData ;

  // register wrMasters_0_incomingBuffer_rWrPtr
  assign wrMasters_0_incomingBuffer_rWrPtr$D_IN = x__h26709 ;
  assign wrMasters_0_incomingBuffer_rWrPtr$EN =
	     wrMasters_0_incomingBuffer_pwEnqueue$whas ;

  // register wrMasters_0_outstanding_beats
  assign wrMasters_0_outstanding_beats$D_IN =
	     wrMasters_0_outstanding_beats$port2__read ;
  assign wrMasters_0_outstanding_beats$EN = 1'b1 ;

  // register wrMasters_0_outstanding_writes
  assign wrMasters_0_outstanding_writes$D_IN =
	     wrMasters_0_outstanding_writes$port2__read ;
  assign wrMasters_0_outstanding_writes$EN = 1'b1 ;

  // register wrMasters_0_outstanding_writes_out
  assign wrMasters_0_outstanding_writes_out$D_IN =
	     wrMasters_0_outstanding_writes_out$port2__read ;
  assign wrMasters_0_outstanding_writes_out$EN = 1'b1 ;

  // register wrMasters_0_task_data_output_reg
  assign wrMasters_0_task_data_output_reg$D_IN =
	     WILL_FIRE_RL_wrMasters_0_forwardData ?
	       MUX_wrMasters_0_task_data_output_reg$write_1__VAL_1 :
	       wrMasters_0_reqGen_outgoingBuffer$D_OUT[44:0] ;
  assign wrMasters_0_task_data_output_reg$EN =
	     WILL_FIRE_RL_wrMasters_0_forwardData ||
	     WILL_FIRE_RL_wrMasters_0_fillBuffer ;

  // register wrMasters_0_task_data_requests_reg
  assign wrMasters_0_task_data_requests_reg$D_IN =
	     WILL_FIRE_RL_wrMasters_0_placeRequest ?
	       MUX_wrMasters_0_task_data_requests_reg$write_1__VAL_1 :
	       wrMasters_0_reqGen_outgoingBuffer$D_OUT[157:45] ;
  assign wrMasters_0_task_data_requests_reg$EN =
	     WILL_FIRE_RL_wrMasters_0_placeRequest ||
	     WILL_FIRE_RL_wrMasters_0_fillBuffer ;

  // submodule rdMasters_0_master_rd_in
  assign rdMasters_0_master_rd_in$D_IN =
	     { rdMasters_0_read_rq_out$D_OUT[93:15],
	       CASE_rdMasters_0_read_rq_outD_OUT_BITS_14_TO__ETC__q6,
	       rdMasters_0_read_rq_out$D_OUT[10:0] } ;
  assign rdMasters_0_master_rd_in$ENQ =
	     WILL_FIRE_RL_rdMasters_0_placeAXI &&
	     NOT_rdMasters_0_outstanding_beats_port0__read__ETC___d376 ;
  assign rdMasters_0_master_rd_in$DEQ =
	     rdMasters_0_master_rd_in$EMPTY_N && M_AXI_HBM_0_arready ;
  assign rdMasters_0_master_rd_in$CLR = 1'b0 ;

  // submodule rdMasters_0_master_rd_out
  assign rdMasters_0_master_rd_out$D_IN = rdMasters_0_master_rd_rinpkg$wget ;
  assign rdMasters_0_master_rd_out$ENQ =
	     rdMasters_0_master_rd_out$FULL_N && M_AXI_HBM_0_rvalid ;
  assign rdMasters_0_master_rd_out$DEQ =
	     WILL_FIRE_RL_rdMasters_0_forwardData ;
  assign rdMasters_0_master_rd_out$CLR = 1'b0 ;

  // submodule rdMasters_0_maxOutstandingFIFO
  assign rdMasters_0_maxOutstandingFIFO$D_IN = 1'd1 ;
  assign rdMasters_0_maxOutstandingFIFO$ENQ =
	     WILL_FIRE_RL_rdMasters_0_placeRequest ;
  assign rdMasters_0_maxOutstandingFIFO$DEQ =
	     WILL_FIRE_RL_rdMasters_0_forwardData &&
	     rdMasters_0_master_rd_out$D_OUT[0] ;
  assign rdMasters_0_maxOutstandingFIFO$CLR = 1'b0 ;

  // submodule rdMasters_0_outgoingBuffer_memory
  assign rdMasters_0_outgoingBuffer_memory$ADDRA =
	     rdMasters_0_outgoingBuffer_rWrPtr[11:0] ;
  assign rdMasters_0_outgoingBuffer_memory$ADDRB =
	     rdMasters_0_outgoingBuffer_pwDequeue$whas ?
	       x__h21373[11:0] :
	       rdMasters_0_outgoingBuffer_rRdPtr[11:0] ;
  assign rdMasters_0_outgoingBuffer_memory$DIA = x3__h21201 ;
  assign rdMasters_0_outgoingBuffer_memory$DIB =
	     512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */  ;
  assign rdMasters_0_outgoingBuffer_memory$WEA =
	     WILL_FIRE_RL_rdMasters_0_forwardData ;
  assign rdMasters_0_outgoingBuffer_memory$WEB = 1'd0 ;
  assign rdMasters_0_outgoingBuffer_memory$ENA = 1'b1 ;
  assign rdMasters_0_outgoingBuffer_memory$ENB = 1'b1 ;

  // submodule rdMasters_0_read_rq_out
  assign rdMasters_0_read_rq_out$D_IN =
	     { 1'd0,
	       rdMasters_0_task_data_requests_reg[68:5],
	       IF_rdMasters_0_task_data_requests_reg_34_BITS__ETC___d355,
	       17'd102784,
	       rdMasters_0_task_data_requests_reg[4:1] } ;
  assign rdMasters_0_read_rq_out$ENQ = WILL_FIRE_RL_rdMasters_0_placeRequest ;
  assign rdMasters_0_read_rq_out$DEQ =
	     WILL_FIRE_RL_rdMasters_0_placeAXI &&
	     NOT_rdMasters_0_outstanding_beats_port0__read__ETC___d376 ;
  assign rdMasters_0_read_rq_out$CLR = 1'b0 ;

  // submodule rdMasters_0_relaxationBuffer
  assign rdMasters_0_relaxationBuffer$D_IN =
	     rdMasters_0_outgoingBuffer_wDataOut$wget ;
  assign rdMasters_0_relaxationBuffer$ENQ =
	     rdMasters_0_outgoingBuffer_pwDequeue$whas ;
  assign rdMasters_0_relaxationBuffer$DEQ =
	     rdMasters_0_relaxationBuffer$EMPTY_N ;
  assign rdMasters_0_relaxationBuffer$CLR = 1'b0 ;

  // submodule rdMasters_0_reqGen_incomingBuffer
  assign rdMasters_0_reqGen_incomingBuffer$D_IN =
	     { 64'd0, length[31:0], 4'd0 } ;
  assign rdMasters_0_reqGen_incomingBuffer$ENQ =
	     _dor1rdMasters_0_reqGen_incomingBuffer$EN_enq &&
	     intf_count != 6'd0 ;
  assign rdMasters_0_reqGen_incomingBuffer$DEQ =
	     rdMasters_0_reqGen_incomingBuffer$EMPTY_N &&
	     rdMasters_0_reqGen_intermediateBuffer$FULL_N ;
  assign rdMasters_0_reqGen_incomingBuffer$CLR = 1'b0 ;

  // submodule rdMasters_0_reqGen_intermediateBuffer
  assign rdMasters_0_reqGen_intermediateBuffer$D_IN =
	     { x__h17458[5:0],
	       rdMasters_0_reqGen_incomingBufferD_OUT_BITS_3_ETC__q7[5:0],
	       rdMasters_0_reqGen_incomingBuffer$D_OUT } ;
  assign rdMasters_0_reqGen_intermediateBuffer$ENQ =
	     rdMasters_0_reqGen_incomingBuffer$EMPTY_N &&
	     rdMasters_0_reqGen_intermediateBuffer$FULL_N ;
  assign rdMasters_0_reqGen_intermediateBuffer$DEQ =
	     rdMasters_0_reqGen_intermediateBuffer$EMPTY_N &&
	     rdMasters_0_reqGen_intermediateBuffer2$FULL_N ;
  assign rdMasters_0_reqGen_intermediateBuffer$CLR = 1'b0 ;

  // submodule rdMasters_0_reqGen_intermediateBuffer2
  assign rdMasters_0_reqGen_intermediateBuffer2$D_IN =
	     { rdMasters_0_reqGen_intermediateBuffer$D_OUT[111:100],
	       x__h17633[25:0],
	       rdMasters_0_reqGen_intermediateBuffer$D_OUT[99:0] } ;
  assign rdMasters_0_reqGen_intermediateBuffer2$ENQ =
	     rdMasters_0_reqGen_intermediateBuffer$EMPTY_N &&
	     rdMasters_0_reqGen_intermediateBuffer2$FULL_N ;
  assign rdMasters_0_reqGen_intermediateBuffer2$DEQ =
	     rdMasters_0_reqGen_intermediateBuffer2$EMPTY_N &&
	     rdMasters_0_reqGen_intermediateBuffer3$FULL_N ;
  assign rdMasters_0_reqGen_intermediateBuffer2$CLR = 1'b0 ;

  // submodule rdMasters_0_reqGen_intermediateBuffer3
  assign rdMasters_0_reqGen_intermediateBuffer3$D_IN =
	     { rdMasters_0_reqGen_intermediateBuffer2$D_OUT,
	       requests_first__h17734 } ;
  assign rdMasters_0_reqGen_intermediateBuffer3$ENQ =
	     rdMasters_0_reqGen_intermediateBuffer2$EMPTY_N &&
	     rdMasters_0_reqGen_intermediateBuffer3$FULL_N ;
  assign rdMasters_0_reqGen_intermediateBuffer3$DEQ =
	     rdMasters_0_reqGen_intermediateBuffer3$EMPTY_N &&
	     rdMasters_0_reqGen_outgoingBuffer$FULL_N ;
  assign rdMasters_0_reqGen_intermediateBuffer3$CLR = 1'b0 ;

  // submodule rdMasters_0_reqGen_outgoingBuffer
  assign rdMasters_0_reqGen_outgoingBuffer$D_IN =
	     { rdMasters_0_reqGen_intermediateBuffer3$D_OUT[8:0],
	       x__h17958,
	       request_data_requests_total__h17932,
	       rdMasters_0_reqGen_intermediateBuffer3$D_OUT[108:45],
	       rdMasters_0_reqGen_intermediateBuffer3$D_OUT[12:9],
	       1'd1,
	       rdMasters_0_reqGen_intermediateBuffer3$D_OUT[146:109],
	       rdMasters_0_reqGen_intermediateBuffer3$D_OUT[50:45],
	       1'd1 } ;
  assign rdMasters_0_reqGen_outgoingBuffer$ENQ =
	     rdMasters_0_reqGen_intermediateBuffer3$EMPTY_N &&
	     rdMasters_0_reqGen_outgoingBuffer$FULL_N ;
  assign rdMasters_0_reqGen_outgoingBuffer$DEQ =
	     WILL_FIRE_RL_rdMasters_0_fillBuffer ;
  assign rdMasters_0_reqGen_outgoingBuffer$CLR = 1'b0 ;

  // submodule wrMasters_0_beatsPerRequestFIFO
  assign wrMasters_0_beatsPerRequestFIFO$D_IN = _theResult_____3__h27065 ;
  assign wrMasters_0_beatsPerRequestFIFO$ENQ =
	     WILL_FIRE_RL_wrMasters_0_placeRequest ;
  assign wrMasters_0_beatsPerRequestFIFO$DEQ =
	     WILL_FIRE_RL_wrMasters_0_forwardData &&
	     wrMasters_0_beatsThisRequestCntr_16_EQ_wrMaste_ETC___d718 ;
  assign wrMasters_0_beatsPerRequestFIFO$CLR = 1'b0 ;

  // submodule wrMasters_0_incomingBuffer_memory
  assign wrMasters_0_incomingBuffer_memory$ADDRA =
	     wrMasters_0_incomingBuffer_rWrPtr[11:0] ;
  assign wrMasters_0_incomingBuffer_memory$ADDRB =
	     WILL_FIRE_RL_wrMasters_0_forwardData ?
	       x__h26804[11:0] :
	       wrMasters_0_incomingBuffer_rRdPtr[11:0] ;
  assign wrMasters_0_incomingBuffer_memory$DIA = x3__h26632 ;
  assign wrMasters_0_incomingBuffer_memory$DIB =
	     512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */  ;
  assign wrMasters_0_incomingBuffer_memory$WEA =
	     wrMasters_0_incomingBuffer_pwEnqueue$whas ;
  assign wrMasters_0_incomingBuffer_memory$WEB = 1'd0 ;
  assign wrMasters_0_incomingBuffer_memory$ENA = 1'b1 ;
  assign wrMasters_0_incomingBuffer_memory$ENB = 1'b1 ;

  // submodule wrMasters_0_master_wr_in_addr
  assign wrMasters_0_master_wr_in_addr$D_IN =
	     { wrMasters_0_write_rq_out$D_OUT[93:15],
	       CASE_wrMasters_0_write_rq_outD_OUT_BITS_14_TO_ETC__q8,
	       wrMasters_0_write_rq_out$D_OUT[10:0] } ;
  assign wrMasters_0_master_wr_in_addr$ENQ =
	     WILL_FIRE_RL_wrMasters_0_placeAXI &&
	     NOT_wrMasters_0_outstanding_beats_port0__read__ETC___d672 ;
  assign wrMasters_0_master_wr_in_addr$DEQ =
	     wrMasters_0_master_wr_in_addr$EMPTY_N && M_AXI_HBM_0_awready ;
  assign wrMasters_0_master_wr_in_addr$CLR = 1'b0 ;

  // submodule wrMasters_0_master_wr_in_data
  assign wrMasters_0_master_wr_in_data$D_IN =
	     { d__h28397,
	       x_strb__h28589,
	       wrMasters_0_beatsThisRequestCntr_16_EQ_wrMaste_ETC___d718 } ;
  assign wrMasters_0_master_wr_in_data$ENQ =
	     WILL_FIRE_RL_wrMasters_0_forwardData ;
  assign wrMasters_0_master_wr_in_data$DEQ =
	     wrMasters_0_master_wr_in_data$EMPTY_N && M_AXI_HBM_0_wready ;
  assign wrMasters_0_master_wr_in_data$CLR = 1'b0 ;

  // submodule wrMasters_0_master_wr_out
  assign wrMasters_0_master_wr_out$D_IN = wrMasters_0_master_wr_rinpkg$wget ;
  assign wrMasters_0_master_wr_out$ENQ =
	     wrMasters_0_master_wr_out$FULL_N && M_AXI_HBM_0_bvalid ;
  assign wrMasters_0_master_wr_out$DEQ = wrMasters_0_master_wr_out$EMPTY_N ;
  assign wrMasters_0_master_wr_out$CLR = 1'b0 ;

  // submodule wrMasters_0_relaxationBuffer
  assign wrMasters_0_relaxationBuffer$D_IN =
	     512'hDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEF ;
  assign wrMasters_0_relaxationBuffer$ENQ =
	     wrMasters_0_relaxationBuffer$FULL_N ;
  assign wrMasters_0_relaxationBuffer$DEQ =
	     wrMasters_0_incomingBuffer_pwEnqueue$whas ;
  assign wrMasters_0_relaxationBuffer$CLR = 1'b0 ;

  // submodule wrMasters_0_reqGen_incomingBuffer
  assign wrMasters_0_reqGen_incomingBuffer$D_IN =
	     { 64'd0, length[31:0], 4'd0 } ;
  assign wrMasters_0_reqGen_incomingBuffer$ENQ =
	     _dor1wrMasters_0_reqGen_incomingBuffer$EN_enq &&
	     intf_count != 6'd0 ;
  assign wrMasters_0_reqGen_incomingBuffer$DEQ =
	     wrMasters_0_reqGen_incomingBuffer$EMPTY_N &&
	     wrMasters_0_reqGen_intermediateBuffer$FULL_N ;
  assign wrMasters_0_reqGen_incomingBuffer$CLR = 1'b0 ;

  // submodule wrMasters_0_reqGen_intermediateBuffer
  assign wrMasters_0_reqGen_intermediateBuffer$D_IN =
	     { x__h23024[5:0],
	       wrMasters_0_reqGen_incomingBufferD_OUT_BITS_3_ETC__q9[5:0],
	       wrMasters_0_reqGen_incomingBuffer$D_OUT } ;
  assign wrMasters_0_reqGen_intermediateBuffer$ENQ =
	     wrMasters_0_reqGen_incomingBuffer$EMPTY_N &&
	     wrMasters_0_reqGen_intermediateBuffer$FULL_N ;
  assign wrMasters_0_reqGen_intermediateBuffer$DEQ =
	     wrMasters_0_reqGen_intermediateBuffer$EMPTY_N &&
	     wrMasters_0_reqGen_intermediateBuffer2$FULL_N ;
  assign wrMasters_0_reqGen_intermediateBuffer$CLR = 1'b0 ;

  // submodule wrMasters_0_reqGen_intermediateBuffer2
  assign wrMasters_0_reqGen_intermediateBuffer2$D_IN =
	     { wrMasters_0_reqGen_intermediateBuffer$D_OUT[111:100],
	       x__h23199[25:0],
	       wrMasters_0_reqGen_intermediateBuffer$D_OUT[99:0] } ;
  assign wrMasters_0_reqGen_intermediateBuffer2$ENQ =
	     wrMasters_0_reqGen_intermediateBuffer$EMPTY_N &&
	     wrMasters_0_reqGen_intermediateBuffer2$FULL_N ;
  assign wrMasters_0_reqGen_intermediateBuffer2$DEQ =
	     wrMasters_0_reqGen_intermediateBuffer2$EMPTY_N &&
	     wrMasters_0_reqGen_intermediateBuffer3$FULL_N ;
  assign wrMasters_0_reqGen_intermediateBuffer2$CLR = 1'b0 ;

  // submodule wrMasters_0_reqGen_intermediateBuffer3
  assign wrMasters_0_reqGen_intermediateBuffer3$D_IN =
	     { wrMasters_0_reqGen_intermediateBuffer2$D_OUT,
	       requests_first__h23300 } ;
  assign wrMasters_0_reqGen_intermediateBuffer3$ENQ =
	     wrMasters_0_reqGen_intermediateBuffer2$EMPTY_N &&
	     wrMasters_0_reqGen_intermediateBuffer3$FULL_N ;
  assign wrMasters_0_reqGen_intermediateBuffer3$DEQ =
	     wrMasters_0_reqGen_intermediateBuffer3$EMPTY_N &&
	     wrMasters_0_reqGen_outgoingBuffer$FULL_N ;
  assign wrMasters_0_reqGen_intermediateBuffer3$CLR = 1'b0 ;

  // submodule wrMasters_0_reqGen_outgoingBuffer
  assign wrMasters_0_reqGen_outgoingBuffer$D_IN =
	     { wrMasters_0_reqGen_intermediateBuffer3$D_OUT[8:0],
	       x__h23524,
	       request_data_requests_total__h23498,
	       wrMasters_0_reqGen_intermediateBuffer3$D_OUT[108:45],
	       wrMasters_0_reqGen_intermediateBuffer3$D_OUT[12:9],
	       1'd1,
	       wrMasters_0_reqGen_intermediateBuffer3$D_OUT[146:109],
	       wrMasters_0_reqGen_intermediateBuffer3$D_OUT[50:45],
	       1'd1 } ;
  assign wrMasters_0_reqGen_outgoingBuffer$ENQ =
	     wrMasters_0_reqGen_intermediateBuffer3$EMPTY_N &&
	     wrMasters_0_reqGen_outgoingBuffer$FULL_N ;
  assign wrMasters_0_reqGen_outgoingBuffer$DEQ =
	     WILL_FIRE_RL_wrMasters_0_fillBuffer ;
  assign wrMasters_0_reqGen_outgoingBuffer$CLR = 1'b0 ;

  // submodule wrMasters_0_write_rq_out
  assign wrMasters_0_write_rq_out$D_IN =
	     { 1'd0,
	       wrMasters_0_task_data_requests_reg[68:5],
	       _theResult_____3__h27065,
	       17'd102784,
	       wrMasters_0_task_data_requests_reg[4:1] } ;
  assign wrMasters_0_write_rq_out$ENQ =
	     WILL_FIRE_RL_wrMasters_0_placeRequest ;
  assign wrMasters_0_write_rq_out$DEQ =
	     WILL_FIRE_RL_wrMasters_0_placeAXI &&
	     NOT_wrMasters_0_outstanding_beats_port0__read__ETC___d672 ;
  assign wrMasters_0_write_rq_out$CLR = 1'b0 ;

  // remaining internal signals
  assign IF_rdMasters_0_task_data_requests_reg_34_BITS__ETC___d355 =
	     (rdMasters_0_task_data_requests_reg[94:69] == 26'd1 &&
	      rdMasters_0_task_data_requests_reg[103:95] != 9'd0) ?
	       x__h20083[7:0] :
	       ((rdMasters_0_task_data_requests_reg[0] &&
		 rdMasters_0_task_data_requests_reg[112:104] != 9'd0) ?
		  x__h20093[7:0] :
		  8'd63) ;
  assign IF_s_config_writeSlave_in_rv_BIT_3_THEN_s_conf_ETC__q1 =
	     s_config_writeSlave_in_rv[3] ?
	       s_config_writeSlave_in_rv[18:11] :
	       { 7'd0, start } ;
  assign IF_s_config_writeSlave_in_rv_BIT_3_THEN_s_conf_ETC__q4 =
	     s_config_writeSlave_in_rv[3] ?
	       s_config_writeSlave_in_rv[18:11] :
	       { 2'd0, intf_count } ;
  assign IF_s_config_writeSlave_in_rv_BIT_3_THEN_s_conf_ETC__q5 =
	     s_config_writeSlave_in_rv[3] ?
	       s_config_writeSlave_in_rv[18:11] :
	       { 2'd0, operation } ;
  assign IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 =
	     (wrMasters_0_task_data_output_reg[0] &&
	      wrMasters_0_task_data_output_reg[44:39] != 6'd0) ?
	       endByte___1__h31500 :
	       ((wrMasters_0_task_data_output_reg[32:7] == 26'd1) ?
		  ((wrMasters_0_task_data_output_reg[38:33] == 6'd0) ?
		     7'd64 :
		     endByte___1__h31526) :
		  7'd64) ;
  assign NOT_rdMasters_0_outgoingBuffer_rRdPtr_read__12_ETC___d432 =
	     rdMasters_0_outgoingBuffer_rRdPtr + 13'd2048 !=
	     rdMasters_0_outgoingBuffer_rWrPtr &&
	     rdMasters_0_master_rd_out$EMPTY_N &&
	     rdMasters_0_maxOutstandingFIFO$EMPTY_N ;
  assign NOT_rdMasters_0_outstanding_beats_port0__read__ETC___d376 =
	     rdMasters_0_outstanding_beats >=
	     _0_CONCAT_rdMasters_0_read_rq_out_first__71_BIT_ETC___d374 ;
  assign NOT_rdMasters_0_task_data_output_reg_33_BITS_3_ETC___d1079 =
	     rdMasters_0_task_data_output_reg[32:7] != 26'd0 ||
	     rdMasters_0_task_data_requests_reg[94:69] != 26'd0 ||
	     wrMasters_0_task_data_output_reg[32:7] != 26'd0 ||
	     wrMasters_0_task_data_requests_reg[94:69] != 26'd0 ||
	     wrMasters_0_outstanding_writes != 6'd0 ;
  assign NOT_wrMasters_0_outstanding_beats_port0__read__ETC___d672 =
	     wrMasters_0_outstanding_beats >=
	     _0_CONCAT_wrMasters_0_write_rq_out_first__67_BI_ETC___d670 ;
  assign _0_CONCAT_rdMasters_0_read_rq_out_first__71_BIT_ETC___d374 =
	     b__h20519 + 12'd1 ;
  assign _0_CONCAT_wrMasters_0_write_rq_out_first__67_BI_ETC___d670 =
	     b__h27949 + 12'd1 ;
  assign _dor1rdMasters_0_reqGen_incomingBuffer$EN_enq =
	     WILL_FIRE_RL_startReadWrite || WILL_FIRE_RL_startRead ;
  assign _dor1wrMasters_0_reqGen_incomingBuffer$EN_enq =
	     WILL_FIRE_RL_startReadWrite || WILL_FIRE_RL_startWrite ;
  assign _theResult_____3__h27065 =
	     (wrMasters_0_task_data_requests_reg[94:69] == 26'd1 &&
	      wrMasters_0_task_data_requests_reg[103:95] != 9'd0) ?
	       x__h27128[7:0] :
	       ((wrMasters_0_task_data_requests_reg[0] &&
		 wrMasters_0_task_data_requests_reg[112:104] != 9'd0) ?
		  x__h27138[7:0] :
		  8'd63) ;
  assign _theResult____h17453 =
	     (rdMasters_0_reqGen_incomingBuffer$D_OUT[41:36] == 6'd0) ?
	       bytes_first__h17452 :
	       bytes_first___1__h17484 ;
  assign _theResult____h17631 =
	     (rdMasters_0_reqGen_intermediateBuffer$D_OUT[111:106] == 6'd0) ?
	       transfers_total__h17630 :
	       transfers_total___1__h17639 ;
  assign _theResult____h17965 =
	     (rdMasters_0_reqGen_intermediateBuffer3_first___ETC___d275[5:0] ==
	      6'd0) ?
	       requests_total__h17901 :
	       requests_total___1__h17972 ;
  assign _theResult____h23019 =
	     (wrMasters_0_reqGen_incomingBuffer$D_OUT[41:36] == 6'd0) ?
	       bytes_first__h23018 :
	       bytes_first___1__h23050 ;
  assign _theResult____h23197 =
	     (wrMasters_0_reqGen_intermediateBuffer$D_OUT[111:106] == 6'd0) ?
	       transfers_total__h23196 :
	       transfers_total___1__h23205 ;
  assign _theResult____h23531 =
	     (wrMasters_0_reqGen_intermediateBuffer3_first___ETC___d532[5:0] ==
	      6'd0) ?
	       requests_total__h23467 :
	       requests_total___1__h23538 ;
  assign addr_last__h17805 =
	     rdMasters_0_reqGen_intermediateBuffer2$D_OUT[47:36] + y__h17826 ;
  assign addr_last__h17806 = addr_last__h17805 - 12'd1 ;
  assign addr_last__h23371 =
	     wrMasters_0_reqGen_intermediateBuffer2$D_OUT[47:36] + y__h23392 ;
  assign addr_last__h23372 = addr_last__h23371 - 12'd1 ;
  assign b__h20519 = { 4'd0, rdMasters_0_read_rq_out$D_OUT[28:21] } ;
  assign b__h21970 =
	     rdMasters_0_outstanding_beats$EN_port0__write ?
	       rdMasters_0_outstanding_beats$port0__write_1 :
	       rdMasters_0_outstanding_beats ;
  assign b__h27949 = { 4'd0, wrMasters_0_write_rq_out$D_OUT[28:21] } ;
  assign b__h28038 =
	     wrMasters_0_master_wr_out$EMPTY_N ?
	       wrMasters_0_outstanding_writes$port0__write_1 :
	       wrMasters_0_outstanding_writes ;
  assign b__h28069 =
	     wrMasters_0_outstanding_writes_out$EN_port0__write ?
	       wrMasters_0_outstanding_writes_out$port0__write_1 :
	       wrMasters_0_outstanding_writes_out ;
  assign b__h39635 =
	     wrMasters_0_outstanding_beats$EN_port0__write ?
	       wrMasters_0_outstanding_beats$port0__write_1 :
	       wrMasters_0_outstanding_beats ;
  assign barrier_transfers__h17849 = x__h17859[11:0] >> 6 ;
  assign barrier_transfers__h23415 = x__h23425[11:0] >> 6 ;
  assign beatsThisRequestCntrT__h28431 =
	     wrMasters_0_beatsThisRequestCntr + 8'd1 ;
  assign burst_length__h17803 =
	     (rdMasters_0_reqGen_intermediateBuffer2$D_OUT[125:100] <
	      26'd64) ?
	       rdMasters_0_reqGen_intermediateBuffer2$D_OUT[108:100] :
	       9'd64 ;
  assign burst_length__h23369 =
	     (wrMasters_0_reqGen_intermediateBuffer2$D_OUT[125:100] <
	      26'd64) ?
	       wrMasters_0_reqGen_intermediateBuffer2$D_OUT[108:100] :
	       9'd64 ;
  assign bytes_first___1__h17484 = 64'd64 - bytes_first__h17452 ;
  assign bytes_first___1__h23050 = 64'd64 - bytes_first__h23018 ;
  assign bytes_first__h17452 =
	     { 58'd0, rdMasters_0_reqGen_incomingBuffer$D_OUT[41:36] } ;
  assign bytes_first__h23018 =
	     { 58'd0, wrMasters_0_reqGen_incomingBuffer$D_OUT[41:36] } ;
  assign d__h28397 =
	     (wrMasters_0_incomingBuffer_rCache[525] &&
	      wrMasters_0_incomingBuffer_rCache[524:512] ==
	      wrMasters_0_incomingBuffer_rRdPtr) ?
	       wrMasters_0_incomingBuffer_rCache[511:0] :
	       wrMasters_0_incomingBuffer_memory$DOB ;
  assign endByte___1__h31500 =
	     startByte___1__h31499 +
	     { 1'd0, wrMasters_0_task_data_output_reg[44:39] } ;
  assign endByte___1__h31526 =
	     { 1'd0, wrMasters_0_task_data_output_reg[38:33] } ;
  assign rdMasters_0_reqGen_incomingBufferD_OUT_BITS_3_ETC__q7 =
	     rdMasters_0_reqGen_incomingBuffer$D_OUT[35:4] - y__h17525 ;
  assign rdMasters_0_reqGen_intermediateBuffer3_first___ETC___d275 =
	     rdMasters_0_reqGen_intermediateBuffer3$D_OUT[134:109] -
	     { 17'd0, rdMasters_0_reqGen_intermediateBuffer3$D_OUT[8:0] } ;
  assign rdMasters_0_task_data_output_reg_33_BITS_32_TO_ETC___d1083 =
	     rdMasters_0_task_data_output_reg[32:7] == 26'd0 &&
	     rdMasters_0_task_data_requests_reg[94:69] == 26'd0 &&
	     wrMasters_0_task_data_output_reg[32:7] == 26'd0 &&
	     wrMasters_0_task_data_requests_reg[94:69] == 26'd0 &&
	     wrMasters_0_outstanding_writes == 6'd0 ;
  assign request_data_requests_total__h17932 =
	     (rdMasters_0_reqGen_intermediateBuffer3$D_OUT[8:0] == 9'd0) ?
	       _theResult____h17965 :
	       requests_total__h17969 ;
  assign request_data_requests_total__h23498 =
	     (wrMasters_0_reqGen_intermediateBuffer3$D_OUT[8:0] == 9'd0) ?
	       _theResult____h23531 :
	       requests_total__h23535 ;
  assign requests_first__h17734 =
	     (addr_last__h17806 <=
	      rdMasters_0_reqGen_intermediateBuffer2$D_OUT[47:36]) ?
	       barrier_transfers__h17849[8:0] :
	       9'd0 ;
  assign requests_first__h23300 =
	     (addr_last__h23372 <=
	      wrMasters_0_reqGen_intermediateBuffer2$D_OUT[47:36]) ?
	       barrier_transfers__h23415[8:0] :
	       9'd0 ;
  assign requests_total___1__h17972 = requests_total__h17901 + 26'd1 ;
  assign requests_total___1__h23538 = requests_total__h23467 + 26'd1 ;
  assign requests_total__h17901 =
	     rdMasters_0_reqGen_intermediateBuffer3_first___ETC___d275 >> 6 ;
  assign requests_total__h17969 = _theResult____h17965 + 26'd1 ;
  assign requests_total__h23467 =
	     wrMasters_0_reqGen_intermediateBuffer3_first___ETC___d532 >> 6 ;
  assign requests_total__h23535 = _theResult____h23531 + 26'd1 ;
  assign startByte___1__h31499 =
	     { 1'd0, wrMasters_0_task_data_output_reg[6:1] } ;
  assign transfers_total___1__h17639 = transfers_total__h17630 + 32'd1 ;
  assign transfers_total___1__h23205 = transfers_total__h23196 + 32'd1 ;
  assign transfers_total__h17630 = (x__h17659 - y__h17660) >> 6 ;
  assign transfers_total__h17636 = _theResult____h17631 + 32'd1 ;
  assign transfers_total__h23196 = (x__h23225 - y__h23226) >> 6 ;
  assign transfers_total__h23202 = _theResult____h23197 + 32'd1 ;
  assign v__h5196 = { 63'd0, start } ;
  assign v__h5567 = { 58'd0, operation } ;
  assign v__h5889 = { 58'd0, intf_count } ;
  assign wrMasters_0_beatsThisRequestCntr_16_EQ_wrMaste_ETC___d718 =
	     wrMasters_0_beatsThisRequestCntr ==
	     wrMasters_0_beatsPerRequestFIFO$D_OUT ;
  assign wrMasters_0_reqGen_incomingBufferD_OUT_BITS_3_ETC__q9 =
	     wrMasters_0_reqGen_incomingBuffer$D_OUT[35:4] - y__h23091 ;
  assign wrMasters_0_reqGen_intermediateBuffer3_first___ETC___d532 =
	     wrMasters_0_reqGen_intermediateBuffer3$D_OUT[134:109] -
	     { 17'd0, wrMasters_0_reqGen_intermediateBuffer3$D_OUT[8:0] } ;
  assign x3__h21201 =
	     WILL_FIRE_RL_rdMasters_0_forwardData ?
	       rdMasters_0_master_rd_out$D_OUT[514:3] :
	       512'd0 ;
  assign x3__h26632 =
	     wrMasters_0_incomingBuffer_pwEnqueue$whas ?
	       wrMasters_0_relaxationBuffer$D_OUT :
	       512'd0 ;
  assign x__h17458 =
	     ({ 32'd0, rdMasters_0_reqGen_incomingBuffer$D_OUT[35:4] } <
	      _theResult____h17453 ||
	      _theResult____h17453 == 64'd0 &&
	      rdMasters_0_reqGen_incomingBuffer$D_OUT[35:4] < 32'd64) ?
	       { 32'd0, rdMasters_0_reqGen_incomingBuffer$D_OUT[35:4] } :
	       _theResult____h17453 ;
  assign x__h17633 =
	     (rdMasters_0_reqGen_intermediateBuffer$D_OUT[105:100] == 6'd0) ?
	       _theResult____h17631 :
	       transfers_total__h17636 ;
  assign x__h17659 =
	     rdMasters_0_reqGen_intermediateBuffer$D_OUT[35:4] - y__h17662 ;
  assign x__h17859 =
	     13'd4096 -
	     { 1'd0, rdMasters_0_reqGen_intermediateBuffer2$D_OUT[47:36] } ;
  assign x__h17958 =
	     { 3'd0,
	       rdMasters_0_reqGen_intermediateBuffer3_first___ETC___d275[5:0] } ;
  assign x__h20083 = rdMasters_0_task_data_requests_reg[103:95] - 9'd1 ;
  assign x__h20093 = rdMasters_0_task_data_requests_reg[112:104] - 9'd1 ;
  assign x__h21278 = rdMasters_0_outgoingBuffer_rWrPtr + 13'd1 ;
  assign x__h21373 = rdMasters_0_outgoingBuffer_rRdPtr + 13'd1 ;
  assign x__h23024 =
	     ({ 32'd0, wrMasters_0_reqGen_incomingBuffer$D_OUT[35:4] } <
	      _theResult____h23019 ||
	      _theResult____h23019 == 64'd0 &&
	      wrMasters_0_reqGen_incomingBuffer$D_OUT[35:4] < 32'd64) ?
	       { 32'd0, wrMasters_0_reqGen_incomingBuffer$D_OUT[35:4] } :
	       _theResult____h23019 ;
  assign x__h23199 =
	     (wrMasters_0_reqGen_intermediateBuffer$D_OUT[105:100] == 6'd0) ?
	       _theResult____h23197 :
	       transfers_total__h23202 ;
  assign x__h23225 =
	     wrMasters_0_reqGen_intermediateBuffer$D_OUT[35:4] - y__h23228 ;
  assign x__h23425 =
	     13'd4096 -
	     { 1'd0, wrMasters_0_reqGen_intermediateBuffer2$D_OUT[47:36] } ;
  assign x__h23524 =
	     { 3'd0,
	       wrMasters_0_reqGen_intermediateBuffer3_first___ETC___d532[5:0] } ;
  assign x__h26709 = wrMasters_0_incomingBuffer_rWrPtr + 13'd1 ;
  assign x__h26804 = wrMasters_0_incomingBuffer_rRdPtr + 13'd1 ;
  assign x__h27128 = wrMasters_0_task_data_requests_reg[103:95] - 9'd1 ;
  assign x__h27138 = wrMasters_0_task_data_requests_reg[112:104] - 9'd1 ;
  assign x__h31486 =
	     (wrMasters_0_task_data_output_reg[0] &&
	      wrMasters_0_task_data_output_reg[44:39] != 6'd0) ?
	       startByte___1__h31499 :
	       7'd0 ;
  assign x_address_dynamic__h20154 =
	     rdMasters_0_task_data_requests_reg[37:17] + 21'd1 ;
  assign x_address_dynamic__h27200 =
	     wrMasters_0_task_data_requests_reg[37:17] + 21'd1 ;
  assign x_requests_total__h20152 =
	     rdMasters_0_task_data_requests_reg[94:69] - 26'd1 ;
  assign x_requests_total__h27198 =
	     wrMasters_0_task_data_requests_reg[94:69] - 26'd1 ;
  assign x_strb__h28589 =
	     { x__h31486 <= 7'd63 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd63,
	       x__h31486 <= 7'd62 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd62,
	       x__h31486 <= 7'd61 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd61,
	       x__h31486 <= 7'd60 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd60,
	       x__h31486 <= 7'd59 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd59,
	       x__h31486 <= 7'd58 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd58,
	       x__h31486 <= 7'd57 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd57,
	       x__h31486 <= 7'd56 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd56,
	       x__h31486 <= 7'd55 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd55,
	       x__h31486 <= 7'd54 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd54,
	       x__h31486 <= 7'd53 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd53,
	       x__h31486 <= 7'd52 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd52,
	       x__h31486 <= 7'd51 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd51,
	       x__h31486 <= 7'd50 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd50,
	       x__h31486 <= 7'd49 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd49,
	       x__h31486 <= 7'd48 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd48,
	       x__h31486 <= 7'd47 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd47,
	       x__h31486 <= 7'd46 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd46,
	       x__h31486 <= 7'd45 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd45,
	       x__h31486 <= 7'd44 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd44,
	       x__h31486 <= 7'd43 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd43,
	       x__h31486 <= 7'd42 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd42,
	       x__h31486 <= 7'd41 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd41,
	       x__h31486 <= 7'd40 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd40,
	       x__h31486 <= 7'd39 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd39,
	       x__h31486 <= 7'd38 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd38,
	       x__h31486 <= 7'd37 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd37,
	       x__h31486 <= 7'd36 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd36,
	       x__h31486 <= 7'd35 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd35,
	       x__h31486 <= 7'd34 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd34,
	       x__h31486 <= 7'd33 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd33,
	       x__h31486 <= 7'd32 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd32,
	       x__h31486 <= 7'd31 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd31,
	       x__h31486 <= 7'd30 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd30,
	       x__h31486 <= 7'd29 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd29,
	       x__h31486 <= 7'd28 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd28,
	       x__h31486 <= 7'd27 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd27,
	       x__h31486 <= 7'd26 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd26,
	       x__h31486 <= 7'd25 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd25,
	       x__h31486 <= 7'd24 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd24,
	       x__h31486 <= 7'd23 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd23,
	       x__h31486 <= 7'd22 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd22,
	       x__h31486 <= 7'd21 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd21,
	       x__h31486 <= 7'd20 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd20,
	       x__h31486 <= 7'd19 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd19,
	       x__h31486 <= 7'd18 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd18,
	       x__h31486 <= 7'd17 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd17,
	       x__h31486 <= 7'd16 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd16,
	       x__h31486 <= 7'd15 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd15,
	       x__h31486 <= 7'd14 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd14,
	       x__h31486 <= 7'd13 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd13,
	       x__h31486 <= 7'd12 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd12,
	       x__h31486 <= 7'd11 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd11,
	       x__h31486 <= 7'd10 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd10,
	       x__h31486 <= 7'd9 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd9,
	       x__h31486 <= 7'd8 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd8,
	       x__h31486 <= 7'd7 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd7,
	       x__h31486 <= 7'd6 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd6,
	       x__h31486 <= 7'd5 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd5,
	       x__h31486 <= 7'd4 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd4,
	       x__h31486 <= 7'd3 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd3,
	       x__h31486 <= 7'd2 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd2,
	       x__h31486 <= 7'd1 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 >
	       7'd1,
	       x__h31486 == 7'd0 &&
	       IF_wrMasters_0_task_data_output_reg_10_BIT_0_2_ETC___d740 !=
	       7'd0 } ;
  assign x_transfers_total__h21757 =
	     rdMasters_0_task_data_output_reg[32:7] - 26'd1 ;
  assign x_transfers_total__h39509 =
	     wrMasters_0_task_data_output_reg[32:7] - 26'd1 ;
  assign y__h17525 = { 26'd0, x__h17458[5:0] } ;
  assign y__h17660 =
	     { 26'd0, rdMasters_0_reqGen_intermediateBuffer$D_OUT[105:100] } ;
  assign y__h17662 =
	     { 26'd0, rdMasters_0_reqGen_intermediateBuffer$D_OUT[111:106] } ;
  assign y__h17826 = { burst_length__h17803[5:0], 6'd0 } ;
  assign y__h23091 = { 26'd0, x__h23024[5:0] } ;
  assign y__h23226 =
	     { 26'd0, wrMasters_0_reqGen_intermediateBuffer$D_OUT[105:100] } ;
  assign y__h23228 =
	     { 26'd0, wrMasters_0_reqGen_intermediateBuffer$D_OUT[111:106] } ;
  assign y__h23392 = { burst_length__h23369[5:0], 6'd0 } ;
  always@(operation or
	  rdMasters_0_task_data_output_reg_33_BITS_32_TO_ETC___d1083 or
	  wrMasters_0_task_data_output_reg or
	  wrMasters_0_task_data_requests_reg or
	  wrMasters_0_outstanding_writes or
	  rdMasters_0_task_data_output_reg or
	  rdMasters_0_task_data_requests_reg)
  begin
    case (operation)
      6'd0:
	  IF_operation_9_EQ_0_052_THEN_wrMasters_0_task__ETC___d1086 =
	      wrMasters_0_task_data_output_reg[32:7] == 26'd0 &&
	      wrMasters_0_task_data_requests_reg[94:69] == 26'd0 &&
	      wrMasters_0_outstanding_writes == 6'd0;
      6'd1:
	  IF_operation_9_EQ_0_052_THEN_wrMasters_0_task__ETC___d1086 =
	      rdMasters_0_task_data_output_reg[32:7] == 26'd0 &&
	      rdMasters_0_task_data_requests_reg[94:69] == 26'd0;
      default: IF_operation_9_EQ_0_052_THEN_wrMasters_0_task__ETC___d1086 =
		   rdMasters_0_task_data_output_reg_33_BITS_32_TO_ETC___d1083;
    endcase
  end
  always@(rdMasters_0_master_rd_warcache$wget)
  begin
    case (rdMasters_0_master_rd_warcache$wget)
      4'd1, 4'd2, 4'd3, 4'd10, 4'd14, 4'd15:
	  CASE_rdMasters_0_master_rd_warcachewget_1_rdM_ETC__q2 =
	      rdMasters_0_master_rd_warcache$wget;
      default: CASE_rdMasters_0_master_rd_warcachewget_1_rdM_ETC__q2 = 4'd11;
    endcase
  end
  always@(wrMasters_0_master_wr_wawcache$wget)
  begin
    case (wrMasters_0_master_wr_wawcache$wget)
      4'd1, 4'd2, 4'd3, 4'd6, 4'd7, 4'd14:
	  CASE_wrMasters_0_master_wr_wawcachewget_1_wrM_ETC__q3 =
	      wrMasters_0_master_wr_wawcache$wget;
      default: CASE_wrMasters_0_master_wr_wawcachewget_1_wrM_ETC__q3 = 4'd15;
    endcase
  end
  always@(rdMasters_0_read_rq_out$D_OUT)
  begin
    case (rdMasters_0_read_rq_out$D_OUT[14:11])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd10, 4'd14, 4'd15:
	  CASE_rdMasters_0_read_rq_outD_OUT_BITS_14_TO__ETC__q6 =
	      rdMasters_0_read_rq_out$D_OUT[14:11];
      default: CASE_rdMasters_0_read_rq_outD_OUT_BITS_14_TO__ETC__q6 = 4'd11;
    endcase
  end
  always@(wrMasters_0_write_rq_out$D_OUT)
  begin
    case (wrMasters_0_write_rq_out$D_OUT[14:11])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd6, 4'd7, 4'd14:
	  CASE_wrMasters_0_write_rq_outD_OUT_BITS_14_TO_ETC__q8 =
	      wrMasters_0_write_rq_out$D_OUT[14:11];
      default: CASE_wrMasters_0_write_rq_outD_OUT_BITS_14_TO_ETC__q8 = 4'd15;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        idle <= `BSV_ASSIGNMENT_DELAY 1'd1;
	interruptR <= `BSV_ASSIGNMENT_DELAY 1'd0;
	intf_count <= `BSV_ASSIGNMENT_DELAY 6'd0;
	lastCycle <= `BSV_ASSIGNMENT_DELAY 1'd0;
	length <= `BSV_ASSIGNMENT_DELAY 64'd0;
	operation <= `BSV_ASSIGNMENT_DELAY 6'd0;
	rdMasters_0_outgoingBuffer_rCache <= `BSV_ASSIGNMENT_DELAY
	    526'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	rdMasters_0_outgoingBuffer_rRdPtr <= `BSV_ASSIGNMENT_DELAY 13'd0;
	rdMasters_0_outgoingBuffer_rWrPtr <= `BSV_ASSIGNMENT_DELAY 13'd0;
	rdMasters_0_outstanding_beats <= `BSV_ASSIGNMENT_DELAY 12'd2048;
	rdMasters_0_task_data_output_reg <= `BSV_ASSIGNMENT_DELAY 45'd0;
	rdMasters_0_task_data_requests_reg <= `BSV_ASSIGNMENT_DELAY 113'd0;
	s_config_readBusy <= `BSV_ASSIGNMENT_DELAY 1'd0;
	s_config_readSlave_in_rv <= `BSV_ASSIGNMENT_DELAY 16'd10922;
	s_config_readSlave_out_rv <= `BSV_ASSIGNMENT_DELAY
	    67'h2AAAAAAAAAAAAAAAA;
	s_config_writeBusy <= `BSV_ASSIGNMENT_DELAY 1'd0;
	s_config_writeSlave_addrIn_rv <= `BSV_ASSIGNMENT_DELAY 16'd10922;
	s_config_writeSlave_dataIn_rv <= `BSV_ASSIGNMENT_DELAY
	    73'h0AAAAAAAAAAAAAAAAAA;
	s_config_writeSlave_in_rv <= `BSV_ASSIGNMENT_DELAY
	    88'h2AAAAAAAAAAAAAAAAAAAAA;
	s_config_writeSlave_out_rv <= `BSV_ASSIGNMENT_DELAY 3'd2;
	start <= `BSV_ASSIGNMENT_DELAY 1'd0;
	status <= `BSV_ASSIGNMENT_DELAY 64'd0;
	wrMasters_0_beatsThisRequestCntr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	wrMasters_0_incomingBuffer_rCache <= `BSV_ASSIGNMENT_DELAY
	    526'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	wrMasters_0_incomingBuffer_rRdPtr <= `BSV_ASSIGNMENT_DELAY 13'd0;
	wrMasters_0_incomingBuffer_rWrPtr <= `BSV_ASSIGNMENT_DELAY 13'd0;
	wrMasters_0_outstanding_beats <= `BSV_ASSIGNMENT_DELAY 12'd0;
	wrMasters_0_outstanding_writes <= `BSV_ASSIGNMENT_DELAY 6'd0;
	wrMasters_0_outstanding_writes_out <= `BSV_ASSIGNMENT_DELAY 6'd0;
	wrMasters_0_task_data_output_reg <= `BSV_ASSIGNMENT_DELAY 45'd0;
	wrMasters_0_task_data_requests_reg <= `BSV_ASSIGNMENT_DELAY 113'd0;
      end
    else
      begin
        if (idle$EN) idle <= `BSV_ASSIGNMENT_DELAY idle$D_IN;
	if (interruptR$EN)
	  interruptR <= `BSV_ASSIGNMENT_DELAY interruptR$D_IN;
	if (intf_count$EN)
	  intf_count <= `BSV_ASSIGNMENT_DELAY intf_count$D_IN;
	if (lastCycle$EN) lastCycle <= `BSV_ASSIGNMENT_DELAY lastCycle$D_IN;
	if (length$EN) length <= `BSV_ASSIGNMENT_DELAY length$D_IN;
	if (operation$EN) operation <= `BSV_ASSIGNMENT_DELAY operation$D_IN;
	if (rdMasters_0_outgoingBuffer_rCache$EN)
	  rdMasters_0_outgoingBuffer_rCache <= `BSV_ASSIGNMENT_DELAY
	      rdMasters_0_outgoingBuffer_rCache$D_IN;
	if (rdMasters_0_outgoingBuffer_rRdPtr$EN)
	  rdMasters_0_outgoingBuffer_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      rdMasters_0_outgoingBuffer_rRdPtr$D_IN;
	if (rdMasters_0_outgoingBuffer_rWrPtr$EN)
	  rdMasters_0_outgoingBuffer_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      rdMasters_0_outgoingBuffer_rWrPtr$D_IN;
	if (rdMasters_0_outstanding_beats$EN)
	  rdMasters_0_outstanding_beats <= `BSV_ASSIGNMENT_DELAY
	      rdMasters_0_outstanding_beats$D_IN;
	if (rdMasters_0_task_data_output_reg$EN)
	  rdMasters_0_task_data_output_reg <= `BSV_ASSIGNMENT_DELAY
	      rdMasters_0_task_data_output_reg$D_IN;
	if (rdMasters_0_task_data_requests_reg$EN)
	  rdMasters_0_task_data_requests_reg <= `BSV_ASSIGNMENT_DELAY
	      rdMasters_0_task_data_requests_reg$D_IN;
	if (s_config_readBusy$EN)
	  s_config_readBusy <= `BSV_ASSIGNMENT_DELAY s_config_readBusy$D_IN;
	if (s_config_readSlave_in_rv$EN)
	  s_config_readSlave_in_rv <= `BSV_ASSIGNMENT_DELAY
	      s_config_readSlave_in_rv$D_IN;
	if (s_config_readSlave_out_rv$EN)
	  s_config_readSlave_out_rv <= `BSV_ASSIGNMENT_DELAY
	      s_config_readSlave_out_rv$D_IN;
	if (s_config_writeBusy$EN)
	  s_config_writeBusy <= `BSV_ASSIGNMENT_DELAY s_config_writeBusy$D_IN;
	if (s_config_writeSlave_addrIn_rv$EN)
	  s_config_writeSlave_addrIn_rv <= `BSV_ASSIGNMENT_DELAY
	      s_config_writeSlave_addrIn_rv$D_IN;
	if (s_config_writeSlave_dataIn_rv$EN)
	  s_config_writeSlave_dataIn_rv <= `BSV_ASSIGNMENT_DELAY
	      s_config_writeSlave_dataIn_rv$D_IN;
	if (s_config_writeSlave_in_rv$EN)
	  s_config_writeSlave_in_rv <= `BSV_ASSIGNMENT_DELAY
	      s_config_writeSlave_in_rv$D_IN;
	if (s_config_writeSlave_out_rv$EN)
	  s_config_writeSlave_out_rv <= `BSV_ASSIGNMENT_DELAY
	      s_config_writeSlave_out_rv$D_IN;
	if (start$EN) start <= `BSV_ASSIGNMENT_DELAY start$D_IN;
	if (status$EN) status <= `BSV_ASSIGNMENT_DELAY status$D_IN;
	if (wrMasters_0_beatsThisRequestCntr$EN)
	  wrMasters_0_beatsThisRequestCntr <= `BSV_ASSIGNMENT_DELAY
	      wrMasters_0_beatsThisRequestCntr$D_IN;
	if (wrMasters_0_incomingBuffer_rCache$EN)
	  wrMasters_0_incomingBuffer_rCache <= `BSV_ASSIGNMENT_DELAY
	      wrMasters_0_incomingBuffer_rCache$D_IN;
	if (wrMasters_0_incomingBuffer_rRdPtr$EN)
	  wrMasters_0_incomingBuffer_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      wrMasters_0_incomingBuffer_rRdPtr$D_IN;
	if (wrMasters_0_incomingBuffer_rWrPtr$EN)
	  wrMasters_0_incomingBuffer_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      wrMasters_0_incomingBuffer_rWrPtr$D_IN;
	if (wrMasters_0_outstanding_beats$EN)
	  wrMasters_0_outstanding_beats <= `BSV_ASSIGNMENT_DELAY
	      wrMasters_0_outstanding_beats$D_IN;
	if (wrMasters_0_outstanding_writes$EN)
	  wrMasters_0_outstanding_writes <= `BSV_ASSIGNMENT_DELAY
	      wrMasters_0_outstanding_writes$D_IN;
	if (wrMasters_0_outstanding_writes_out$EN)
	  wrMasters_0_outstanding_writes_out <= `BSV_ASSIGNMENT_DELAY
	      wrMasters_0_outstanding_writes_out$D_IN;
	if (wrMasters_0_task_data_output_reg$EN)
	  wrMasters_0_task_data_output_reg <= `BSV_ASSIGNMENT_DELAY
	      wrMasters_0_task_data_output_reg$D_IN;
	if (wrMasters_0_task_data_requests_reg$EN)
	  wrMasters_0_task_data_requests_reg <= `BSV_ASSIGNMENT_DELAY
	      wrMasters_0_task_data_requests_reg$D_IN;
      end
    if (cycleCount$EN) cycleCount <= `BSV_ASSIGNMENT_DELAY cycleCount$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cycleCount = 64'hAAAAAAAAAAAAAAAA;
    idle = 1'h0;
    interruptR = 1'h0;
    intf_count = 6'h2A;
    lastCycle = 1'h0;
    length = 64'hAAAAAAAAAAAAAAAA;
    operation = 6'h2A;
    rdMasters_0_outgoingBuffer_rCache =
	526'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    rdMasters_0_outgoingBuffer_rRdPtr = 13'h0AAA;
    rdMasters_0_outgoingBuffer_rWrPtr = 13'h0AAA;
    rdMasters_0_outstanding_beats = 12'hAAA;
    rdMasters_0_task_data_output_reg = 45'h0AAAAAAAAAAA;
    rdMasters_0_task_data_requests_reg = 113'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    s_config_readBusy = 1'h0;
    s_config_readSlave_in_rv = 16'hAAAA;
    s_config_readSlave_out_rv = 67'h2AAAAAAAAAAAAAAAA;
    s_config_writeBusy = 1'h0;
    s_config_writeSlave_addrIn_rv = 16'hAAAA;
    s_config_writeSlave_dataIn_rv = 73'h0AAAAAAAAAAAAAAAAAA;
    s_config_writeSlave_in_rv = 88'hAAAAAAAAAAAAAAAAAAAAAA;
    s_config_writeSlave_out_rv = 3'h2;
    start = 1'h0;
    status = 64'hAAAAAAAAAAAAAAAA;
    wrMasters_0_beatsThisRequestCntr = 8'hAA;
    wrMasters_0_incomingBuffer_rCache =
	526'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    wrMasters_0_incomingBuffer_rRdPtr = 13'h0AAA;
    wrMasters_0_incomingBuffer_rWrPtr = 13'h0AAA;
    wrMasters_0_outstanding_beats = 12'hAAA;
    wrMasters_0_outstanding_writes = 6'h2A;
    wrMasters_0_outstanding_writes_out = 6'h2A;
    wrMasters_0_task_data_output_reg = 45'h0AAAAAAAAAAA;
    wrMasters_0_task_data_requests_reg = 113'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if ((WILL_FIRE_RL_s_config_axiReadSpecial_1 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_1) &&
	  (WILL_FIRE_RL_s_config_axiReadSpecial_2 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_2 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_3 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_3 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_4 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_4))
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 238, column 18: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_s_config_axiReadSpecial_1,\n  RL_s_config_axiReadSpecialIsHandled_1] and [RL_s_config_axiReadSpecial_2,\n  RL_s_config_axiReadSpecialIsHandled_2, RL_s_config_axiReadSpecial_3,\n  RL_s_config_axiReadSpecialIsHandled_3, RL_s_config_axiReadSpecial_4,\n  RL_s_config_axiReadSpecialIsHandled_4] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if ((WILL_FIRE_RL_s_config_axiReadSpecial_2 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_2) &&
	  (WILL_FIRE_RL_s_config_axiReadSpecial_3 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_3 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_4 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_4))
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 238, column 18: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_s_config_axiReadSpecial_2,\n  RL_s_config_axiReadSpecialIsHandled_2] and [RL_s_config_axiReadSpecial_3,\n  RL_s_config_axiReadSpecialIsHandled_3, RL_s_config_axiReadSpecial_4,\n  RL_s_config_axiReadSpecialIsHandled_4] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if ((WILL_FIRE_RL_s_config_axiReadSpecial_3 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_3) &&
	  (WILL_FIRE_RL_s_config_axiReadSpecial_4 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_4))
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 238, column 18: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_s_config_axiReadSpecial_3,\n  RL_s_config_axiReadSpecialIsHandled_3] and [RL_s_config_axiReadSpecial_4,\n  RL_s_config_axiReadSpecialIsHandled_4] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if ((WILL_FIRE_RL_s_config_axiReadSpecial ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled) &&
	  (WILL_FIRE_RL_s_config_axiReadSpecial_1 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_1 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_2 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_2 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_3 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_3 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_4 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_4))
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 238, column 18: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_s_config_axiReadSpecial,\n  RL_s_config_axiReadSpecialIsHandled] and [RL_s_config_axiReadSpecial_1,\n  RL_s_config_axiReadSpecialIsHandled_1, RL_s_config_axiReadSpecial_2,\n  RL_s_config_axiReadSpecialIsHandled_2, RL_s_config_axiReadSpecial_3,\n  RL_s_config_axiReadSpecialIsHandled_3, RL_s_config_axiReadSpecial_4,\n  RL_s_config_axiReadSpecialIsHandled_4] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if ((WILL_FIRE_RL_s_config_axiReadSpecial ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_1 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_1 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_2 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_2 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_3 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_3 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_4 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_4) &&
	  WILL_FIRE_RL_s_config_axiReadFallback)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 238, column 18: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_s_config_axiReadSpecial,\n  RL_s_config_axiReadSpecialIsHandled, RL_s_config_axiReadSpecial_1,\n  RL_s_config_axiReadSpecialIsHandled_1, RL_s_config_axiReadSpecial_2,\n  RL_s_config_axiReadSpecialIsHandled_2, RL_s_config_axiReadSpecial_3,\n  RL_s_config_axiReadSpecialIsHandled_3, RL_s_config_axiReadSpecial_4,\n  RL_s_config_axiReadSpecialIsHandled_4] and [RL_s_config_axiReadFallback] )\n  fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_1 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_1 and\n  RL_s_config_1_axiWriteSpecialIsHandled called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_1 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_1 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_1 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_1 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_1 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial &&
	  s_config_writeSlave_in_rv[81:78] == 4'd2 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_1 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_2 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_1)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_2 and\n  RL_s_config_1_axiWriteSpecialIsHandled_1 called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_2 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_1)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_2 and\n  RL_s_config_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_2 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_2 and\n  RL_s_config_1_axiWriteSpecialIsHandled called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_2 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_2 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_2 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_1)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_2 and\n  RL_s_config_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_2 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_1 &&
	  s_config_writeSlave_in_rv[81:78] == 4'd4 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_2 and\n  RL_s_config_1_axiWriteSpecial_1 called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_2 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_2 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_2 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial &&
	  s_config_writeSlave_in_rv[81:78] == 4'd4 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_2 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_3 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_2)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_3 and\n  RL_s_config_1_axiWriteSpecialIsHandled_2 called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_3 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_2)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_3 and\n  RL_s_config_1_axiWriteSpecial_2 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_3 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_1)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_3 and\n  RL_s_config_1_axiWriteSpecialIsHandled_1 called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_3 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_1)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_3 and\n  RL_s_config_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_3 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_3 and\n  RL_s_config_1_axiWriteSpecialIsHandled called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_3 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_3 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_3 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_2)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_3 and\n  RL_s_config_1_axiWriteSpecial_2 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_3 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_2 &&
	  s_config_writeSlave_in_rv[81:78] == 4'd6 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_3 and\n  RL_s_config_1_axiWriteSpecial_2 called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_3 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_1)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_3 and\n  RL_s_config_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_3 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_1 &&
	  s_config_writeSlave_in_rv[81:78] == 4'd6 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_3 and\n  RL_s_config_1_axiWriteSpecial_1 called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_3 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_3 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_3 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial &&
	  s_config_writeSlave_in_rv[81:78] == 4'd6 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_3 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_3)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_4 and\n  RL_s_config_1_axiWriteSpecialIsHandled_3 called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_3)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_4 and\n  RL_s_config_1_axiWriteSpecial_3 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_2)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_4 and\n  RL_s_config_1_axiWriteSpecialIsHandled_2 called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_2)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_4 and\n  RL_s_config_1_axiWriteSpecial_2 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_1)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_4 and\n  RL_s_config_1_axiWriteSpecialIsHandled_1 called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_1)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_4 and\n  RL_s_config_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_4 and\n  RL_s_config_1_axiWriteSpecialIsHandled called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_4 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_3)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_4 and\n  RL_s_config_1_axiWriteSpecial_3 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_3 &&
	  s_config_writeSlave_in_rv[81:78] == 4'd8 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_4 and\n  RL_s_config_1_axiWriteSpecial_3 called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_2)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_4 and\n  RL_s_config_1_axiWriteSpecial_2 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_2 &&
	  s_config_writeSlave_in_rv[81:78] == 4'd8 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_4 and\n  RL_s_config_1_axiWriteSpecial_2 called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_1)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_4 and\n  RL_s_config_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_1 &&
	  s_config_writeSlave_in_rv[81:78] == 4'd8 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_4 and\n  RL_s_config_1_axiWriteSpecial_1 called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_4 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial &&
	  s_config_writeSlave_in_rv[81:78] == 4'd8 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/wimi/cjh/bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_4 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
  end
  // synopsys translate_on
endmodule  // mkMemoryBenchSeq

